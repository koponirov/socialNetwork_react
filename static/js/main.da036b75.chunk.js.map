{"version":3,"sources":["components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","components/News/News.module.css","components/Music/Music.module.css","components/Settings/Settings.module.css","assets/images/letter.svg","assets/images/466.svg","common/Preloader/Preloader.module.css","components/Profile/Profile.module.css","assets/images/edit.svg","assets/images/gear.svg","components/Profile/MyPosts/MyPosts.module.css","assets/images/arrow_back.svg","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Dialogs/Messages/Messages.module.css","components/Navbar/Navbar.module.css","api/api.js","redux/profileReducer.js","redux/dialogsReducer.js","redux/usersReducer.js","redux/authReducer.js","redux/appReducer.js","redux/reduxStore.js","common/Preloader/Preloader.jsx","components/hoc/withAuthRedirect.jsx","components/Users/UserItem.jsx","components/Dialogs/DialogsList.jsx","components/Dialogs/DialogsContainer.jsx","redux/usersSelectors.js","components/Users/UsersList.jsx","components/Users/UsersContainer.jsx","components/Profile/ProfileStatus/ProfileStatusWithHooks.jsx","common/FormControls/FormControls.jsx","utilites/validators/validators.js","components/Profile/ProfileInfo/ProfileData/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileData/ProfileData.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/Post/PostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/Profile.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/Dialogs/Messages/Message.jsx","components/Dialogs/MessageForm.jsx","components/Dialogs/Messages/Messages.jsx","components/Dialogs/Messages/MessagesContainer.jsx","App.js","index.js","common/FormControls/FormControls.module.css","components/Login/Login.module.css","components/Users/Users.module.css","components/Dialogs/Dialogs.module.css","assets/images/man.svg","components/Profile/ProfileInfo/ProfileData/ProfileData.module.css","components/Users/UserItem.module.css"],"names":["module","exports","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageUsersAmount","get","authAPI","then","response","data","email","password","rememberMe","captcha","post","delete","profileAPI","id","userId","status","put","file","formData","FormData","append","followAPI","followToUser","unfollowToUser","securityAPI","dialogsAPI","message","body","ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_STATUS","SAVE_PHOTO_SUCCES","initialState","posts","postText","likeCounter","profile","lookingForAJob","addPost","newPost","type","setUserProfile","setStatus","savePhotoSuccess","profileReducer","state","action","filter","isLookingForAJob","photos","dialogs","messages","newMessagesCount","currentUser","setMessages","dialogsReducer","number","user","length","FOLLOW","UNFOLLOW","SET_USERS","SET_MORE_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS","TOGGLE_IS_LOADING","users","pageSize","totalUsersCount","followingInProgress","isLoading","followUser","unfollowUser","setUsers","setCurrentPage","pageNumber","setTotalUsersCount","totalUsers","setIsLoading","setInProgress","inProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","map","followed","usersss","SET_USER_DATA","SET_AUTH_PROFILE","SET_CAPTCHA","login","isAuth","photo","authProfile","setAuthUserData","payload","setCaptcha","setAuthProfile","getAuthUserData","getCaptcha","url","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","usersPage","auth","app","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Preloader","className","s","container","src","loading","mapStateToPropsForRedirect","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","UserItem","userName","userStatus","userPhoto","path","style","styles","listItem__container","listItem","ava","defaultPhoto","content__container","content","DialogsList","Row","index","small","list","height","width","itemCount","itemSize","window_list","DialogsContainer","requestDialogs","requestNewMessagesCount","list__container","newMessageText","messagesCount","getUsers","getPageSize","getTotalUsersCount","getCurrentPage","getIsLoading","getFollowingInProgress","UsersList","hasNextPage","isNextPageLoading","loadNextPage","items","loadMoreItems","isItemLoaded","name","minimumBatchSize","threshold","onItemsRendered","ref","UsersContainer","startIndex","stopIndex","itemsNumber","Math","ceil","requestMoreUsers","requestUsers","console","log","follow","bind","unfollow","totalCount","onPageChanged","currentPageNumber","ProfileStatusWithHooks","useState","editMode","setEditMode","useEffect","user__profile__status__container","user__profile__status","saved_status","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","input_status","isOwner","onClick","user__profile__status__edit","editIcon","Textarea","input","meta","hasError","touched","error","cn","formControls","inputField_container","inputField","Input","createField","placeholder","validators","component","text","field","Field","validate","required","undefined","maxLengthCreator","maxLength","ProfileDataFormRedux","reduxForm","onSubmit","handleSubmit","profile_info_container","property_container","property_name","property_value","checkbox","Object","keys","contacts","key","btn","Contact","contactTitle","contactValue","ProfileData","showContacts","activateEditMode","activateShowContacts","aboutMe","lookingForAJobDescription","toggle__show","ProfileInfo","savePhoto","saveProfileData","startChatting","setShowContacts","user__profile","user__profile__title","user__profile__name","fullName","user__profile__settings__btn","user__profile__container","user__profile__photo__block","user__profile__photo","large","alt","target","files","input__file","for","s_p","user__profile__information","initialValues","Post","item","likes","maxLength5","PostReduxForm","MyPosts","postsOnWall","values","Profile","newTextInPost","updateUserStatus","ProfileContainer","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","snapshot","alert","getState","errorMessage","stopSubmit","_error","Promise","reject","withRouter","Header","active","setActive","avatar","setAvatar","header","header__body","onTouchEnd","header__menu","header__list","header__link","header__burger","header__auth","header__auth__info","header__auth__content","header__auth__name","header__auth__logout","logout","header__auth__ava","header__auth__login","header__login","HeaderContainer","LoginReduxForm","form__group","form__field","form__label","form__button","form__wrapper","form__title","Message","messageText","addedAt","message__container","message__wrapper","message__user__name","message__text","message__add__time","formatDistanceToNow","addSuffix","MessageReduxForm","message__form","message__send__button","message__field","autocompele","Messages","m","senderName","senderId","parseIso","messages__container","back__btn","arrow","messages__box","message__form_container","sendMessage","MessagesContainer","requestMessages","sendNewMessage","reset","App","initializeApp","exact","render","promise","all","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.da036b75.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3Rar_\",\"likes\":\"Post_likes__8GrEf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1etFM\",\"container\":\"Header_container__1Oqyp\",\"header__body\":\"Header_header__body__2UT7o\",\"header__menu\":\"Header_header__menu__1WMv5\",\"header__burger\":\"Header_header__burger__1BeK2\",\"header__list\":\"Header_header__list__2rlgu\",\"header__link\":\"Header_header__link__2w6uR\",\"active\":\"Header_active__3Ko8N\",\"header__auth\":\"Header_header__auth__hbZg5\",\"header__auth__info\":\"Header_header__auth__info__6m0qU\",\"header__auth__content\":\"Header_header__auth__content__2sdx8\",\"header__auth__name\":\"Header_header__auth__name__3lOMv\",\"header__auth__ava\":\"Header_header__auth__ava__2Idgu\",\"header__auth__logout\":\"Header_header__auth__logout__2jUkw\",\"header__auth__login\":\"Header_header__auth__login__ecDlA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__1T1ww\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__19Luq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__2ynFj\"};","module.exports = __webpack_public_path__ + \"static/media/letter.2cf0bd6f.svg\";","module.exports = __webpack_public_path__ + \"static/media/466.b5b1dbdf.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Preloader_container__3mNA2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__1GOPs\"};","module.exports = __webpack_public_path__ + \"static/media/edit.33ae1541.svg\";","module.exports = __webpack_public_path__ + \"static/media/gear.a411a4d3.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__1ICs_\"};","module.exports = __webpack_public_path__ + \"static/media/arrow_back.b80b91b6.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user__profile\":\"ProfileInfo_user__profile__yozWI\",\"user__profile__title\":\"ProfileInfo_user__profile__title__396i9\",\"user__profile__name\":\"ProfileInfo_user__profile__name__2fDb3\",\"user__profile__settings__btn\":\"ProfileInfo_user__profile__settings__btn__3-b9V\",\"user__profile__status__container\":\"ProfileInfo_user__profile__status__container__3Sozg\",\"user__profile__status\":\"ProfileInfo_user__profile__status__2qvr1\",\"user__profile__status__edit\":\"ProfileInfo_user__profile__status__edit__3_odt\",\"input_status\":\"ProfileInfo_input_status__1m5Er\",\"saved_status\":\"ProfileInfo_saved_status__2w20_\",\"user__profile__container\":\"ProfileInfo_user__profile__container__1Fsf-\",\"user__profile__photo__block\":\"ProfileInfo_user__profile__photo__block__30-Oh\",\"user__profile__photo\":\"ProfileInfo_user__profile__photo__2qd9u\",\"input__file\":\"ProfileInfo_input__file__3P00C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages__container\":\"Messages_messages__container__33cyS\",\"back__btn\":\"Messages_back__btn__DUZiD\",\"messages__box\":\"Messages_messages__box__2fXkZ\",\"message__container\":\"Messages_message__container__3rEed\",\"message__wrapper\":\"Messages_message__wrapper__1_9Ea\",\"message__user__name\":\"Messages_message__user__name__1b-Ls\",\"message__text\":\"Messages_message__text__1k32F\",\"message__add__time\":\"Messages_message__add__time__10xO-\",\"message__form\":\"Messages_message__form__31KQ8\",\"message__field\":\"Messages_message__field__3dGL9\",\"message__send__button\":\"Messages_message__send__button__ODKRc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__39oHf\",\"item\":\"Navbar_item__1Op9x\",\"activeLink\":\"Navbar_activeLink__2FCfS\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\"API-KEY\": \"ed6168aa-083c-4712-91d3-afe70566eba2\"},\r\n//ya:374b61b3-3684-46aa-832c-9d3f951a688f,klubn:9a26a650-26b0-4c4b-8aab-54c45ef378c9,gm:\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageUsersAmount) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageUsersAmount}`)\r\n    }\r\n};\r\nexport const authAPI = {\r\n\r\n    me() {\r\n        return instance.get('auth/me')\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    login (email,password,rememberMe = false,captcha = null) {\r\n        return instance.post('auth/login',{email,password,rememberMe,captcha})\r\n    },\r\n    logout () {\r\n        return instance.delete('auth/login')\r\n    }\r\n};\r\nexport const profileAPI = {\r\n\r\n    getUserProfile(id) {\r\n        return instance.get(`profile/${id}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getUserStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    updateUserStatus(status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n\r\n    },\r\n    savePhoto(file) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", file);\r\n        return instance.put(`profile/photo`, formData,{\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    saveProfileData(formData) {\r\n        return instance.put(`profile`, formData)\r\n    }\r\n};\r\nexport const followAPI = {\r\n    followToUser(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    unfollowToUser(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    }\r\n};\r\nexport const securityAPI = {\r\n    getCapthaUrl() {\r\n        return instance.get('security/get-captcha-url')\r\n    }\r\n};\r\nexport const dialogsAPI = {\r\n    //get all dialogs\r\n    getDialogs() {\r\n        return instance.get('dialogs')\r\n    },\r\n    //start chatting\r\n    startChatting(userId) {\r\n\r\n        return instance.put(`dialogs/${userId}`)\r\n    },\r\n    //get list of messages with user\r\n    getDialogWithUser (userId) {\r\n        return instance.get(`dialogs/${userId}/messages`)\r\n    },\r\n    //send message to user\r\n    sendMessage(userId,message) {\r\n        return instance.post(`dialogs/${userId}/messages`,{body: message})\r\n    },\r\n    //count new messages\r\n    getNewMessagesCount() {\r\n        return instance.get('dialogs/messages/new/count')\r\n}\r\n}\r\n\r\n","import {profileAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'socialNetwork/profile/ADD_POST';\r\nconst DELETE_POST = 'socialNetwork/profile/DELETE_POST';\r\nconst SET_USER_PROFILE = 'socialNetwork/profile/SET_USER_PROFILE';\r\nconst LOOKING_FOR_JOB = 'socialNetwork/profile/LOOKING_FOR_JOB';\r\nconst SET_STATUS = 'socialNetwork/profile/SET_STATUS';\r\nconst SAVE_PHOTO_SUCCES = 'socialNetwork/profile/SAVE_PHOTO_SUCCES';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {userId: 1, postText: 'How r u?', likeCounter: 1},\r\n        {userId: 2, postText: 'Hi!', likeCounter: 0},\r\n        {userId: 3, postText: 'What?', likeCounter: 5},\r\n    ],\r\n    profile: null,\r\n    lookingForAJob: false,\r\n    status: '',\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {userId: 6, postText: action.newPost, likeCounter: 0}]\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post.userId != action.id)\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case LOOKING_FOR_JOB:\r\n            return {\r\n                ...state,\r\n                lookingForAJob: action.isLookingForAJob\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case SAVE_PHOTO_SUCCES:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.file}\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPost = (newPost) => ({type: ADD_POST, newPost});\r\nexport const deletePost = (id) => ({type: DELETE_POST, id});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\n\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const savePhotoSuccess = (file) => ({type: SAVE_PHOTO_SUCCES, file});\r\n\r\n\r\nexport const getUserProfile = (id) => async (dispatch) => {\r\n    const data = await profileAPI.getUserProfile(id);\r\n    dispatch(setUserProfile(data));\r\n\r\n}\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    const data = await profileAPI.getUserStatus(userId);\r\n    dispatch(setStatus(data));\r\n}\r\n\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    try {\r\n        const response = await profileAPI.updateUserStatus(status);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status))\r\n        }\r\n    }\r\n    catch (error) {\r\n        debugger\r\n        alert('error')\r\n        console.error(error)\r\n        console.log(error)\r\n    }\r\n\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    const response = await profileAPI.savePhoto(file);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos))\r\n    }\r\n}\r\n\r\nexport const saveProfileData = (formData) => async (dispatch,getState) => {\r\n    let response = await profileAPI.saveProfileData(formData);\r\n    if (response.data.resultCode === 0) {\r\n        debugger;\r\n        const userId=getState().auth.id\r\n        const data = await profileAPI.getUserProfile(userId);\r\n        dispatch(setUserProfile(data));\r\n    }\r\n    else {\r\n        let errorMessage = response.data.messages.length > 0 ? response.data.messages[0] : 'Oops';\r\n        console.log(errorMessage)\r\n        dispatch(stopSubmit('profileData', {_error: errorMessage}));\r\n        return Promise.reject(errorMessage)\r\n    }\r\n}\r\n\r\nexport default profileReducer;","import {dialogsAPI} from \"../api/api\";\r\nimport {reset} from 'redux-form';\r\n\r\n\r\nconst SET_DIALOGS = 'SET_DIALOGS';\r\nconst SET_MESSAGES = 'SET_MESSAGES';\r\nconst SET_NEWMESSAGES_COUNT = 'SET_NEWMESSAGES_COUNT';\r\nconst SET_CURRENT_USER = 'SET_CURRENT_USER';\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\nconst CREATE_DIALOG = 'CREATE_DIALOG';\r\n\r\nlet initialState = {\r\n    dialogs: [],\r\n    messages: [],\r\n    newMessagesCount:null,\r\n    currentUser: null\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_DIALOGS :\r\n            return {\r\n                ...state,\r\n                dialogs: [...action.dialogs]\r\n            };\r\n        case SET_MESSAGES :\r\n            return {\r\n                ...state,\r\n                messages: [...action.messages]\r\n            };\r\n        case SET_NEWMESSAGES_COUNT :\r\n            return {\r\n                ...state,\r\n                newMessagesCount: action.number\r\n            };\r\n        case SET_CURRENT_USER :\r\n            return {\r\n                ...state,\r\n                currentUser: action.user\r\n            };\r\n        case SEND_MESSAGE :\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, ...action.message]\r\n            };\r\n        case CREATE_DIALOG :\r\n            if (state.dialogs.length) {\r\n                return {\r\n                    ...state,\r\n                    dialogs: [...state.dialogs, ...action.user]\r\n                };\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    dialogs: [...action.user]\r\n                };\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setDialogs = (dialogs) => ({type: SET_DIALOGS, dialogs});\r\nexport const setMessages = (messages) => ({type: SET_MESSAGES, messages});\r\nexport const setNewMessagesCount = (number) => ({type: SET_NEWMESSAGES_COUNT, number});\r\nexport const setCurrentUser = (user) => ({type: SET_CURRENT_USER, user});\r\nexport const sendMessage = (message) => ({type: SEND_MESSAGE, message});\r\nexport const createDialog = (user) => ({type: CREATE_DIALOG, user});\r\n\r\n\r\nexport const requestDialogs = () => async (dispatch) => {\r\n\r\n    let response = await dialogsAPI.getDialogs()\r\n    dispatch(setDialogs(response.data));\r\n}\r\n\r\nexport const startChatting = (userId) => async (dispatch) => {\r\n\r\n    let response = await dialogsAPI.startChatting(userId)\r\n\r\n}\r\n\r\n\r\nexport const requestMessages = (userId) => async (dispatch) => {\r\n\r\n    dispatch(setCurrentUser(userId))\r\n    let response = await dialogsAPI.getDialogWithUser(userId)\r\n    let messages = response.data.items\r\n    dispatch(setMessages(messages));\r\n}\r\n\r\nexport const sendNewMessage = (userId, message) => async (dispatch) => {\r\n\r\n    const response = await dialogsAPI.sendMessage(userId, message);\r\n    if (response.data.resultCode === 0) {\r\n        let response = await dialogsAPI.getDialogWithUser(userId)\r\n        let messages = response.data.items\r\n        dispatch(setMessages(messages));\r\n        dispatch(reset('message'))\r\n    }\r\n}\r\n\r\nexport const requestNewMessagesCount = () => async (dispatch) => {\r\n\r\n    const response = await dialogsAPI.getNewMessagesCount();\r\n    let messagesCount = response.data\r\n    dispatch(setNewMessagesCount(messagesCount));\r\n}\r\n\r\n\r\n\r\nexport default dialogsReducer;","import {followAPI, usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'socialNetwork/users/FOLLOW';\r\nconst UNFOLLOW = 'socialNetwork/users/UNFOLLOW';\r\nconst SET_USERS = 'socialNetwork/users/SET_USERS';\r\nconst SET_MORE_USERS = 'socialNetwork/users/SET_MORE_USERS';\r\nconst SET_CURRENT_PAGE = 'socialNetwork/users/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS = 'socialNetwork/users/SET_TOTAL_USERS';\r\nconst TOGGLE_IS_LOADING = 'socialNetwork/users/TOGGLE_IS_LOADING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'socialNetwork/users/TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 20,\r\n    currentPage: 1,\r\n    followingInProgress: [2],\r\n    isLoading: false,\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: true}\r\n                    }\r\n                    return user;\r\n                })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: false}\r\n                    }\r\n                    return user;\r\n                })\r\n            };\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        case SET_MORE_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...state.users,...action.usersss]\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.pageNumber\r\n            }\r\n        case SET_TOTAL_USERS:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsers\r\n            }\r\n        case TOGGLE_IS_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.inProgress\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followUser = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowUser = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setMoreUsers = (usersss) => ({type: SET_MORE_USERS, usersss});\r\nexport const setCurrentPage = (pageNumber) => ({type: SET_CURRENT_PAGE, pageNumber});\r\nexport const setTotalUsersCount = (totalUsers) => ({type: SET_TOTAL_USERS, totalUsers});\r\nexport const setIsLoading = (isLoading) => ({type: TOGGLE_IS_LOADING, isLoading});\r\nexport const setInProgress = (inProgress, userId) => {\r\n    return {type: TOGGLE_IS_FOLLOWING_PROGRESS, inProgress, userId}\r\n};\r\nexport const requestUsers = (currentPage, pageSize) => {\r\n\r\n    return async (dispatch) => {\r\n        dispatch(setIsLoading(true));\r\n        let response = await usersAPI.getUsers(currentPage, pageSize)\r\n        dispatch(setIsLoading(false));\r\n        dispatch(setUsers(response.data.items));\r\n        dispatch(setTotalUsersCount(response.data.totalCount))\r\n    }\r\n}\r\n\r\nexport const requestMoreUsers = (currentPage, pageSize) => {\r\n\r\n    return async (dispatch) => {\r\n        dispatch(setIsLoading(true));\r\n        let response = await usersAPI.getUsers(currentPage , pageSize)\r\n        dispatch(setIsLoading(false));\r\n        dispatch(setMoreUsers(response.data.items));\r\n        dispatch(setTotalUsersCount(response.data.totalCount))\r\n    }\r\n}\r\n\r\nexport const onPageChanged = (currentPageNumber, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(setIsLoading(true));\r\n        dispatch(setCurrentPage(currentPageNumber));\r\n        let response = await usersAPI.getUsers(currentPageNumber, pageSize)\r\n        dispatch(setIsLoading(false));\r\n        dispatch(setUsers(response.data.items));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(setInProgress(true, userId));\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(setInProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(\r\n            dispatch,\r\n            userId,\r\n            followAPI.followToUser.bind(followAPI),\r\n            unfollowUser)\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(\r\n            dispatch,\r\n            userId,\r\n            followAPI.unfollowToUser.bind(followAPI),\r\n            followUser)\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import {authAPI, profileAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'socialNetwork/auth/SET_USER_DATA';\r\nconst SET_AUTH_PROFILE = 'socialNetwork/auth/SET_AUTH_PROFILE';\r\nconst SET_CAPTCHA = 'socialNetwork/auth/SET_CAPTCHA';\r\n\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    photo: null,\r\n    captcha: null,\r\n    authProfile:null,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case SET_CAPTCHA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case SET_AUTH_PROFILE:\r\n            return {\r\n                ...state,\r\n                authProfile: action.data,\r\n                isAuth: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (email, id, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {email, id, login, isAuth}\r\n});\r\n\r\nexport const setCaptcha = (captcha) => ({\r\n    type: SET_CAPTCHA,\r\n    payload: {captcha}\r\n});\r\n\r\nexport const setAuthProfile = (data) => ({type: SET_AUTH_PROFILE, data});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n\r\n    if (response.resultCode === 0) {\r\n        let {email, id, login} = response.data;\r\n        dispatch(setAuthUserData(email, id, login));\r\n        profileAPI.getUserProfile(id)\r\n            .then(data => {\r\n                dispatch(setAuthProfile(data))\r\n            })\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe,captcha);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            debugger\r\n            dispatch(getCaptcha())\r\n        }\r\n\r\n        let errorMessage = response.data.messages.length > 0 ? response.data.messages[0] : 'Oops'\r\n        dispatch(stopSubmit('login', {_error: errorMessage}))\r\n    }\r\n}\r\n\r\nexport const getCaptcha = () => async (dispatch) => {\r\n    debugger;\r\n    let response = await securityAPI.getCapthaUrl();\r\n    const captcha = (response.data.url)\r\n    dispatch(setCaptcha(captcha))\r\n}\r\n\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./authReducer\";\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initialized = () => ({type: SET_INITIALIZED});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initialized())\r\n    })\r\n}\r\n\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./appReducer\";\r\n\r\n\r\nlet reducers = combineReducers(\r\n    {\r\n        profilePage: profileReducer,\r\n        dialogsPage: dialogsReducer,\r\n        usersPage: usersReducer,\r\n        auth: authReducer,\r\n        app: appReducer,\r\n        form: formReducer\r\n    }\r\n);\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react'\r\nimport loading from '../../assets/images/466.svg';\r\nimport s from './Preloader.module.css'\r\n\r\nconst Preloader=()=>{\r\n    return (\r\n        <div className={s.container}>\r\n            <img src={loading} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    auth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.auth) {\r\n                return <Redirect to={'/login'}/>\r\n            }\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent\r\n\r\n}","import React from 'react';\r\nimport styles from \"./UserItem.module.css\";\r\nimport defaultPhoto from \"../../assets/images/man.svg\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst UserItem = ({userName,userStatus,userPhoto,path,style}) => {\r\n\r\n    return (\r\n        <NavLink to={path}>\r\n            <div className={styles.listItem__container} style={style}>\r\n                <div className={styles.listItem}>\r\n                    <div className={styles.ava}>\r\n                        <img src={ userPhoto ? userPhoto : defaultPhoto}/>\r\n                    </div>\r\n                    <div className={styles.content__container}>\r\n                        <div className={styles.content}>\r\n                            {userName}\r\n                        </div>\r\n                        <div className={styles.status}>\r\n                            {userStatus}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </NavLink>\r\n    )\r\n};\r\n\r\nexport default UserItem;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogWithUser from './DialogWithUser/DialogWithUser'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {FixedSizeList as List} from \"react-window\";\r\nimport styles from \"../Users/Users.module.css\";\r\nimport AutoSizer from \"react-virtualized-auto-sizer\";\r\nimport UserItem from \"../Users/UserItem\";\r\n\r\nconst DialogsList = ({dialogs}) => {\r\n\r\n\r\n    const Row = ({index, style}) => {\r\n        \r\n        let user = dialogs[index];\r\n\r\n        let path = `/dialogs/${user.id}/messages`\r\n\r\n        return (<UserItem path={path}\r\n                          style={style}\r\n                          userPhoto={user.photos.small}\r\n                          userName={user.userName}/>\r\n\r\n        )\r\n    }\r\n\r\n    return (<div className={styles.list}>\r\n\r\n\r\n                <AutoSizer>\r\n                    {({height, width}) => (\r\n\r\n                        <List\r\n                            height={height}\r\n                            itemCount={dialogs.length}\r\n                            itemSize={100}\r\n                            width={width}\r\n                            className={styles.window_list}\r\n                        >\r\n                            {Row}\r\n                        </List>\r\n                    )}\r\n                </AutoSizer>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default DialogsList;\r\n\r\n","import React from 'react';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {requestDialogs, requestNewMessagesCount} from \"../../redux/dialogsReducer\";\r\nimport DialogsList from \"./DialogsList\";\r\nimport s from \"../Users/Users.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\n\r\n\r\nclass DialogsContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.requestDialogs();\r\n        this.props.requestNewMessagesCount()\r\n    }\r\n\r\n    render() {\r\n        return (<div className={s.list__container}>\r\n                {this.props.dialogs.length > 0 ? <DialogsList\r\n                    dialogs={this.props.dialogs}\r\n                /> : <Preloader/>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        newMessageText: state.dialogsPage.newMessageText\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {requestDialogs,requestNewMessagesCount})\r\n)(DialogsContainer)","export const getUsers = (state) => {\r\n\r\n    return state.usersPage.users\r\n};\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n};\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n};\r\n\r\nexport const getIsLoading = (state) => {\r\n    return state.usersPage.isLoading\r\n};\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n};\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport styles from \"./Users.module.css\";\r\nimport AutoSizer from \"react-virtualized-auto-sizer\";\r\nimport InfiniteLoader from \"react-window-infinite-loader\";\r\nimport {FixedSizeList as List} from \"react-window\"\r\nimport defaultPhoto from \"../../assets/images/man.svg\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport UserItem from \"./UserItem\";\r\n\r\nconst UsersList = ({users, hasNextPage,isNextPageLoading,loadNextPage,totalUsers}) => {\r\n\r\n    let items = users;\r\n\r\n    const itemCount = totalUsers;\r\n\r\n    const loadMoreItems = isNextPageLoading ? () => {} : loadNextPage;\r\n\r\n    const isItemLoaded = index => !hasNextPage || index < items.length;\r\n\r\n    const Row = ({index, style}) => {\r\n\r\n        let userPhoto,userName,userStatus,user,userId;\r\n\r\n        if (!isItemLoaded(index)) {\r\n\r\n            userId = ''\r\n            userPhoto = false;\r\n            userName = 'Loading...';\r\n            userStatus= 'Loading...';\r\n        } else {\r\n            user = items[index]\r\n            userId = user.id\r\n            userPhoto = user.photos.small\r\n            userName = user.name\r\n            userStatus= user.status\r\n        }\r\n\r\n        let path = '/profile/' + userId\r\n\r\n        return (\r\n            <UserItem path={path}\r\n                      style={style}\r\n                      userName={userName}\r\n                      userPhoto={userPhoto}\r\n                      userStatus={userStatus}/>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={styles.list}>\r\n            <AutoSizer >\r\n                {({height, width}) => (\r\n                    <InfiniteLoader\r\n                        isItemLoaded={isItemLoaded}\r\n                        loadMoreItems={loadMoreItems}\r\n                        itemCount={itemCount}\r\n                        minimumBatchSize={50}\r\n                        threshold={25}\r\n                    >\r\n                        {({onItemsRendered, ref}) => (\r\n                            <List\r\n                                height={height}\r\n                                itemCount={itemCount}\r\n                                itemSize={100}\r\n                                width={width}\r\n                                ref={ref}\r\n                                onItemsRendered={onItemsRendered}\r\n                                className={styles.window_list}\r\n                            >\r\n                                {Row}\r\n                            </List>\r\n                        )}\r\n                    </InfiniteLoader>\r\n                )}\r\n            </AutoSizer>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default UsersList;\r\n\r\n// return (\r\n//     <NavLink to={'/profile/' + item.id}>\r\n//         <div className={styles.listItem__container} style={style}>\r\n//             <div className={styles.listItem}>\r\n//                 <div className={styles.ava}>\r\n//                     <img src={item.photos.small ? item.photos.small : photo}/>\r\n//                 </div>\r\n//                 <div className={styles.content__container}>\r\n//                     <div className={styles.content}>\r\n//                         { item.name}\r\n//                     </div>\r\n//                     <div className={styles.status}>\r\n//                         {item.status}\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//\r\n//         </div>\r\n//     </NavLink>\r\n//\r\n// );","import {connect} from 'react-redux'\r\nimport React from 'react'\r\nimport {\r\n    setInProgress, onPageChanged, follow, unfollow, requestUsers, requestMoreUsers, setCurrentPage, setUsers\r\n} from '../../redux/usersReducer';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage, getFollowingInProgress,\r\n    getIsLoading, getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/usersSelectors\";\r\nimport UsersList from \"./UsersList\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport s from './Users.module.css'\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, 100);\r\n        console.log(this.props.users)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //this.props.setCurrentPage(1);\r\n        //this.props.setUsers([]);\r\n    }\r\n\r\n    loadNextPage = (startIndex,stopIndex) => {\r\n\r\n        let itemsNumber = (stopIndex - startIndex)+1;\r\n        let pageNumber = Math.ceil((startIndex+1)/itemsNumber)\r\n        this.props.requestMoreUsers(pageNumber,itemsNumber)\r\n    }\r\n\r\n    render() {\r\n        return (<div className={s.list__container}>\r\n                {this.props.users.length>0 ? <UsersList\r\n                    users={this.props.users}\r\n                    hasNextPage={true}\r\n                    isNextPageLoading={this.props.isLoading}\r\n                    loadNextPage={this.loadNextPage}\r\n                    totalUsers={this.props.totalUsersCount}\r\n                /> : <Preloader/>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isLoading: getIsLoading(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setInProgress,\r\n        requestUsers,\r\n        requestMoreUsers,\r\n        setCurrentPage,\r\n        setUsers,\r\n        onPageChanged\r\n    }),\r\n    withAuthRedirect\r\n)(UsersContainer)\r\n\r\n// return (<div className={s.users__container}>\r\n//     {this.props.users.length>0 ? <UsersList\r\n//         users={this.props.users}\r\n//         hasNextPage={true}\r\n//         isNextPageLoading={this.props.isLoading}\r\n//         loadNextPage={this.loadNextPage}\r\n//         totalUsers={this.props.totalUsersCount}\r\n//     /> : <Preloader/>}\r\n// </div>","import React, {useState, useEffect} from 'react'\r\nimport s from \"../ProfileInfo/ProfileInfo.module.css\";\r\nimport editIcon from '../../../assets/images/edit.svg'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    const [editMode,setEditMode] = useState(false);\r\n    const [status,setStatus] = useState(props.status);\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    },[props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        if (props.isOwner) {\r\n            setEditMode(true)}\r\n\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n        return (\r\n            <div className={s.user__profile__status__container}>\r\n\r\n                {!editMode &&\r\n                    <div className={s.user__profile__status}>\r\n                        <span className={s.saved_status}>{props.status|| \"...status\"}</span>\r\n                    </div>}\r\n                {editMode &&\r\n                    <div className={s.user__profile__status}>\r\n                        <input onChange={onStatusChange} autoFocus={true}\r\n                               onBlur={deactivateEditMode} value={status} className={s.input_status}>\r\n\r\n                        </input>\r\n                    </div>}\r\n                {props.isOwner && <div onClick={activateEditMode} className={s.user__profile__status__edit}>\r\n                    <img src={editIcon}/>\r\n                </div>}\r\n            </div>\r\n        )\r\n    };\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport cn from 'classnames'\r\nimport styles from './FormControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n\r\n    const hasError = (meta.touched && meta.error)\r\n\r\n    return (\r\n        <div className={cn(styles.container,{[styles.formControls]:hasError})}>\r\n            <div className={styles.inputField_container}>\r\n                <textarea {...input} {...props} className={styles.inputField}/>\r\n            </div>\r\n            <div >\r\n                {hasError && <span> {meta.error} </span>}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n\r\n    const hasError = (meta.touched && meta.error)\r\n\r\n    return (\r\n        <div className={hasError && styles.formControls}>\r\n            <div >\r\n                <input {...input} {...props} className={styles.inputField}/>\r\n            </div>\r\n            <div>\r\n                {hasError && <span> {meta.error} </span>}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => {\r\n    return (\r\n        <div className={styles.field}>\r\n            <Field placeholder={placeholder}\r\n                   name={name}\r\n                   validate={validators}\r\n                   component={component}\r\n                   {...props}\r\n            /> {text}\r\n        </div>\r\n    )\r\n}\r\n\r\n","export const required = value => (value || typeof value === 'number' ? undefined : 'Required');\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    return (\r\n        value && value.length > maxLength ? `Must be ${maxLength} characters or less` : undefined\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input, Textarea} from \"../../../../common/FormControls/FormControls\";\r\nimport s from './ProfileData.module.css'\r\nimport styles from \"../../../../common/FormControls/FormControls.module.css\";\r\nimport cn from 'classnames';\r\nimport {maxLengthCreator} from \"../../../../utilites/validators/validators\";\r\n\r\nconst ProfileDataForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={s.profile_info_container}>\r\n\r\n                <div className={s.property_container}>\r\n                    <div className={s.property_name}>FullName:</div>\r\n                    <div className={s.property_value}>{createField('Full name', 'fullName', [], Input)}</div>\r\n                </div>\r\n                <div className={s.property_container}>\r\n                    <div className={s.property_name}>About me:</div>\r\n                    <div className={s.property_value}>{createField('About me', 'aboutMe', [], Textarea)}</div>\r\n                </div>\r\n                <div className={s.property_container}>\r\n                    <div className={s.property_name}>Looking for a job:</div>\r\n                    <div className={cn(s.property_value,s.checkbox)}>{createField('Looking for a job',\r\n                            'lookingForAJob', [], Input, {type: 'checkbox'})}</div>\r\n                </div>\r\n                <div className={s.property_container}>\r\n                    <div className={s.property_name}>Professional skills:</div>\r\n                    <div className={s.property_value}>{createField('Professional skills', 'lookingForAJobDescription',\r\n                            [], Textarea)}</div>\r\n                </div >\r\n                <div className={s.property_container}>\r\n                    <div className={s.property_name}>Contacts:</div>\r\n                </div>\r\n                    {Object.keys(props.profile.contacts).map(key => {\r\n                        return <div className={s.property_container}>\r\n                            <div className={s.property_name}>{key}:</div>\r\n                            <div className={s.property_value}>{createField('', 'contacts.' + key, [], Input)} </div>\r\n                        </div>\r\n                    })}\r\n\r\n\r\n                {props.error && <div className={styles.error}>{props.error}</div>}\r\n                <button className={s.btn}>save</button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const ProfileDataFormRedux = reduxForm({\r\n    form: 'profileData'\r\n})(ProfileDataForm)\r\n\r\n","import React from 'react';\r\nimport s from './ProfileData.module.css';\r\n\r\nconst ProfileData = ({profile, isOwner, activateEditMode,showContacts, activateShowContacts}) => {\r\n    return (\r\n        <div className={s.profile_info_container}>\r\n            <div className={s.property_container}>\r\n                <div className={s.property_name}>About me:</div>\r\n                <div className={s.property_value}>{profile.aboutMe}</div>\r\n            </div>\r\n            <div className={s.property_container}>\r\n                <div className={s.property_name}>Looking for a job:</div>\r\n                <div className={s.property_value}>{profile.lookingForAJob ? 'yes' : 'not'}</div>\r\n            </div>\r\n            <div className={s.property_container}>\r\n                <div className={s.property_name}>Professional skills:</div>\r\n                <div className={s.property_value}>{profile.lookingForAJobDescription}</div>\r\n            </div>\r\n            <div className={s.property_container}>\r\n                <div className={s.toggle__show} onClick={activateShowContacts}>\r\n                    {showContacts?'hide contacts':'show contacts'}\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {showContacts&&(Object.keys(profile.contacts).map(key => {\r\n             return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            }))}\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n};\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (<div className={s.property_container}>\r\n            <div className={s.property_name}>{contactTitle}</div>\r\n            <div className={s.property_value}>{contactValue}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileData;\r\n\r\n","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport s_p from '../ProfileInfo/ProfileData/ProfileData.module.css';\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport photo from '../../../assets/images/man.svg'\r\nimport ProfileStatusWithHooks from \"../ProfileStatus/ProfileStatusWithHooks\";\r\nimport {ProfileDataFormRedux} from \"./ProfileData/ProfileDataForm\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport editIcon from '../../../assets/images/gear.svg'\r\nimport ProfileData from \"./ProfileData/ProfileData\";\r\n\r\n\r\nconst ProfileInfo = ({profile, isOwner, status, updateStatus, savePhoto, saveProfileData, currentUser, startChatting}) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const [showContacts, setShowContacts] = useState(false)\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfileData(formData).then(\r\n            () => {\r\n                setEditMode(false)\r\n            })\r\n    };\r\n\r\n    return (<div className={s.user__profile}>\r\n            <div className={s.user__profile__title}>\r\n                <div className={s.user__profile__name}>{profile.fullName}</div>\r\n                <div className={s.user__profile__settings__btn}>\r\n                    {isOwner && <img src={editIcon} onClick={() => {setEditMode(!editMode)}}/>}\r\n                </div>\r\n\r\n            </div>\r\n            <ProfileStatusWithHooks status={status}\r\n                                    isOwner={isOwner}\r\n                                    updateStatus={updateStatus}/>\r\n            <div className={s.user__profile__container}>\r\n                <div className={s.user__profile__photo__block}>\r\n                    <div className={s.user__profile__photo}>\r\n                        <img src={profile.photos.large != null ? profile.photos.large : photo} alt='user photo'/>\r\n                    </div>\r\n\r\n                    {editMode &&\r\n                    <div>\r\n                        <input type='file' name=\"file\" id=\"file\"\r\n                               onChange={onMainPhotoSelected}\r\n                               className={s.input__file}/>\r\n                        <label for=\"file\">Choose main photo...</label>\r\n                    </div>\r\n\r\n                    }\r\n\r\n                    {!isOwner &&\r\n                    <NavLink to={`/dialogs/${currentUser}/messages`}>\r\n                        <button onClick={() => startChatting(currentUser)} className={s_p.btn}>send message</button>\r\n                    </NavLink>}\r\n                </div>\r\n                <div className={s.user__profile__information}>\r\n\r\n\r\n                    {editMode ?\r\n                        <ProfileDataFormRedux initialValues={profile}\r\n                                              onSubmit={onSubmit}\r\n                                              profile={profile}/>:\r\n                        <ProfileData profile={profile}\r\n                                     isOwner={isOwner}\r\n                                     showContacts={showContacts}\r\n                                     activateEditMode={() => {\r\n                                         setEditMode(true)\r\n                                     }}\r\n                                     activateShowContacts={() => {\r\n                                         setShowContacts(!showContacts)\r\n                                     }}/>\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default ProfileInfo;\r\n\r\n","import React from 'react';\r\nimport style from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={style.item}>\r\n            <img\r\n                src='https://картинки-для-срисовки.рф/image/cache/catalog/vse-kartinki/kosmonavt/kosmonavt-011-800x800.jpg'></img>\r\n            <div>{props.postText}</div>\r\n            <span className={style.likes}>like {props.likeCounter}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport {maxLengthCreator, required} from \"../../../../utilites/validators/validators\";\r\nimport {Textarea} from \"../../../../common/FormControls/FormControls\";\r\n\r\n\r\nconst maxLength5 = maxLengthCreator (5)\r\n\r\nconst PostForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    name='postText'\r\n                    component={Textarea}\r\n                    validate={[required, maxLength5]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button >send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst PostReduxForm = reduxForm ({\r\n    form: 'post'\r\n})(PostForm);\r\n\r\nexport default PostReduxForm;\r\n\r\n","import React from 'react';\r\nimport style from './MyPosts.module.css';\r\nimport Post from '../MyPosts/Post/Post';\r\nimport PostReduxForm from \"./Post/PostForm\";\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsOnWall = props.posts.map((post) => {\r\n        return (\r\n            <Post postText={post.postText} likeCounter={post.likeCounter}/>\r\n        )\r\n    });\r\n\r\n    const addPost = (values) => {\r\n        debugger;\r\n        props.addPost(values.postText);\r\n\r\n    };\r\n\r\n    return (\r\n        <div className={style.content}>\r\n            <h3>\r\n                My posts\r\n            </h3>\r\n            <div>\r\n                <PostReduxForm onSubmit={addPost}/>\r\n            </div>\r\n\r\n            {postsOnWall}\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport style from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={style.content}>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateUserStatus}\r\n                         isOwner={props.isOwner}\r\n                         currentUser={props.currentUser}\r\n                         savePhoto={props.savePhoto}\r\n                         saveProfileData={props.saveProfileData}\r\n                         startChatting={props.startChatting}\r\n            />\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n\r\n//{ props.isOwner ? <MyPostsContainer/> : ''}","import React from 'react';\r\nimport {addPost, changeText} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps=(state)=>{\r\n    return {\r\n        posts:state.profilePage.posts,\r\n        newTextInPost:state.profilePage.newTextInPost\r\n    }\r\n};\r\n\r\nconst MyPostsContainer=connect(mapStateToProps,{addPost})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    addPost,\r\n    getUserProfile,\r\n    getUserStatus,\r\n    savePhoto,\r\n    saveProfileData, setUserProfile,\r\n    updateUserStatus,\r\n} from \"../../redux/profileReducer\";\r\nimport { withRouter} from 'react-router-dom';\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {startChatting} from \"../../redux/dialogsReducer\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile () {\r\n        let userId=this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId=this.props.authorizedUserId};\r\n        if(!userId) {\r\n            this.props.history.push('/login')\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getUserStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.setUserProfile(null)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile ()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <Profile {...this.props}\r\n                 profile={this.props.profile}\r\n                 status={this.props.status}\r\n                 isOwner={!this.props.match.params.userId}\r\n                 currentUser={this.props.match.params.userId}\r\n                 savePhoto={this.props.savePhoto}\r\n                 saveProfileData={this.props.saveProfileData}\r\n                 setUserProfile={this.props.setUserProfile}\r\n        />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return (\r\n        {   profile: state.profilePage.profile,\r\n            status: state.profilePage.status,\r\n            authorizedUserId: state.auth.id,\r\n            isAuth: state.auth.isAuth\r\n        }\r\n    )\r\n};\r\n\r\nexport default compose(\r\n    connect (mapStateToProps, {addPost,getUserProfile,\r\n        getUserStatus,updateUserStatus,savePhoto,saveProfileData,startChatting,setUserProfile }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)","import React, {useEffect, useState} from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport defaultPhoto from '../../assets/images/man.svg'\r\nimport cn from 'classnames'\r\n\r\nconst Header = (props) => {\r\n\r\n    const [active, setActive] = useState(false);\r\n\r\n    const [avatar,setAvatar] = useState(props.avatar);\r\n\r\n    useEffect(()=>{\r\n        setAvatar(props.avatar)\r\n    },[props.avatar]);\r\n\r\n//`${s.header__menu} ${s.active}`\r\n    return <header className={s.header}>\r\n        <div className={s.container}>\r\n            <div className={s.header__body}>\r\n                <nav  onTouchEnd={() => setActive(!active)}\r\n                    className={active ? cn(s.header__menu,s.active) : s.header__menu}>\r\n                    <ul className={s.header__list}>\r\n                        <NavLink to='/profile' className={s.header__link}>\r\n                            <li>\r\n                            Profile\r\n                            </li>\r\n                        </NavLink>\r\n                        <NavLink to='/users' className={s.header__link}>\r\n                            <li>\r\n                            Users\r\n                            </li>\r\n                        </NavLink>\r\n                        <NavLink to='/dialogs' className={s.header__link}>\r\n                            <li>\r\n                                Dialogs {props.newMessagesCount>0?props.newMessagesCount:'' }\r\n                            </li>\r\n                        </NavLink>\r\n                    </ul>\r\n                </nav>\r\n                <div onClick={() => setActive(!active)}\r\n                     className={active ? `${s.header__burger} ${s.active}` : s.header__burger}>\r\n                    <span></span>\r\n                </div>\r\n                <div className={s.header__auth}>\r\n                    {props.profile ?\r\n                        <div className={s.header__auth__info}>\r\n\r\n                            <div className={s.header__auth__content}>\r\n                                <NavLink to='/profile'>\r\n                                    <div className={s.header__auth__name}>{props.profile.fullName}</div>\r\n                                </NavLink>\r\n                                <div className={s.header__auth__logout}><span onClick={props.logout}>logout</span></div>\r\n                            </div>\r\n                            <div className={s.header__auth__ava}>\r\n                                <NavLink to='/profile'>\r\n                                    <img src={props.profile.photos.small != null ?\r\n                                        props.profile.photos.small : defaultPhoto} alt='photo'/>\r\n                                </NavLink>\r\n                            </div>\r\n                        </div>\r\n\r\n                        : <div className={s.header__auth__login}>\r\n                            <NavLink className={s.header__login} to={'/login'}>LOGIN</NavLink>\r\n                        </div>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData, logout} from \"../../redux/authReducer\";\r\nimport {requestNewMessagesCount} from \"../../redux/dialogsReducer\";\r\nimport {getProfileAvatar} from \"../../redux/usersSelectors\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    avatar: state.auth.photo,\r\n    newMessagesCount: state.dialogsPage.newMessagesCount,\r\n    profile: state.auth.authProfile\r\n})\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);\r\n\r\n","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required} from \"../../utilites/validators/validators\";\r\nimport {createField, Input} from \"../../common/FormControls/FormControls\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from '../../common/FormControls/FormControls.module.css'\r\nimport s from './Login.module.css'\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.form__wrapper}>\r\n            <div className={s.form}>\r\n                <h3 className={s.form__title}>LOGIN</h3>\r\n                <LoginReduxForm onSubmit={onSubmit} captcha={props.captcha}/>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n\r\n            <div className={s.form__group}>\r\n                <div className={s.form__field}>\r\n                    {createField('Email', 'email', [required], Input)}\r\n                </div>\r\n                <label className={s.form__label}></label>\r\n            </div>\r\n\r\n            <div className={s.form__group}>\r\n                <div className={s.form__field}>\r\n                    {createField('Password', 'password', [required], Input, {type: 'password'})}\r\n                </div>\r\n                <label className={s.form__label}></label>\r\n            </div>\r\n\r\n            {props.captcha && <img src={props.captcha}/>}\r\n            {props.captcha && <div>\r\n                {createField('captcha', 'captcha', [required], Input)}\r\n            </div>}\r\n\r\n            {props.error && <div className={styles.error}>\r\n                {props.error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button className={s.form__button}>Log in</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        captcha: state.auth.captcha\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import React from 'react';\r\nimport s from './Messages.module.css';\r\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow'\r\n\r\nconst Message = ({userName,messageText,addedAt}) => {\r\n    return (\r\n        <div className={s.message__container} >\r\n            <div className={s.message__wrapper}>\r\n                <div className={s.message__user__name}>{userName}:</div>\r\n                <div className={s.message__text}>{messageText}</div>\r\n            </div>\r\n            <div className={s.message__add__time}>\r\n                {formatDistanceToNow(addedAt,{addSuffix:true})}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport s from './Messages/Messages.module.css'\r\nimport {maxLengthCreator, required} from \"../../utilites/validators/validators\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\n\r\nconst maxLength300 = maxLengthCreator(300)\r\n\r\nconst MessageForm = (props)=> {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.message__form}>\r\n\r\n            <div className={s.message__send__button}>\r\n                <button type='submit' >send</button>\r\n            </div>\r\n            <div className={s.message__field}>\r\n                <Field\r\n                    name='message'\r\n                    component={Textarea}\r\n                    autocompele='off'\r\n\r\n                />\r\n            </div>\r\n\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MessageReduxForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'message'\r\n})(MessageForm)\r\n\r\nexport default MessageReduxForm;","import React from 'react';\r\nimport Message from \"./Message\";\r\nimport MessageReduxForm from \"./../MessageForm\";\r\nimport s from './Messages.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport arrow from './../../../assets/images/arrow_back.svg'\r\nimport parseIso from 'date-fns/parseISO'\r\n\r\nconst Messages = (props) => {\r\n\r\n    let messages = props.messages.map((m) => {\r\n        console.log(m.addedAt)\r\n        return (\r\n            <Message userName={m.senderName}\r\n                     userId={m.senderId}\r\n                     messageText={m.body}\r\n                     key={m.id}\r\n                     addedAt={parseIso(m.addedAt)}/>\r\n        )\r\n    })\r\n\r\n    const sendMessage = (values) => {\r\n\r\n        props.sendMessage(props.currentUser, values.message)\r\n    };\r\n\r\n    return <div className={s.messages__container}>\r\n        <div className={s.back__btn}>\r\n            <NavLink to={'/dialogs'}> <img src={arrow}/> back to dialogs</NavLink>\r\n        </div>\r\n        <div className={s.messages__box}>\r\n                {messages}\r\n        </div>\r\n\r\n\r\n        <div className={s.message__form_container}>\r\n            <MessageReduxForm onSubmit={sendMessage}/>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Messages;\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport Messages from \"./Messages\";\r\nimport {requestMessages, sendNewMessage, setMessages} from \"../../../redux/dialogsReducer\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nclass MessagesContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let currentUser = this.props.match.params.userId;\r\n        this.props.requestMessages(currentUser)\r\n    }\r\n    componentWillUnmount () {\r\n        this.props.setMessages('')\r\n    }\r\n\r\n    render() {\r\n\r\n        return <Messages\r\n            messages={this.props.messages}\r\n            sendMessage={this.props.sendNewMessage}\r\n            currentUser={this.props.currentUser}\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.dialogsPage.messages,\r\n        currentUser: state.dialogsPage.currentUser,\r\n        newMessageText: state.dialogsPage.newMessageText\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {requestMessages,sendNewMessage,setMessages}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(MessagesContainer)","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport News from './components/News/News';\r\nimport Music from './components/Music/Music';\r\nimport Settings from './components/Settings/Settings';\r\nimport {Redirect, Route} from 'react-router-dom';\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {initializeApp} from \"./redux/appReducer\";\r\nimport Preloader from \"./common/Preloader/Preloader\";\r\nimport MessagesContainer from \"./components/Dialogs/Messages/MessagesContainer\";\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        } else {\r\n\r\n            return (\r\n\r\n                <div className='app'>\r\n                    <div className='app__header'>\r\n                        <HeaderContainer/>\r\n                    </div>\r\n                    <div className='app__content'>\r\n                        <div className='app__content__container'>\r\n                            <Route exact path='/'\r\n                                   render={() => <Redirect to={'/profile'}/>}/>\r\n                            <Route path='/profile/:userId?'\r\n                                   render={() => <ProfileContainer/>}/>\r\n                            <Route exact path='/dialogs'\r\n                                   render={() => <DialogsContainer />}/>\r\n                            <Route path='/dialogs/:userId/messages'\r\n                                   render={() => <MessagesContainer />}/>\r\n                            <Route path='/users'\r\n                                   render={() => <UsersContainer />}/>\r\n                            <Route path='/login'\r\n                                   render={() => <Login />}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nexport default connect(mapStateToProps, {initializeApp})(App);\r\n","import React from 'react';\r\nimport store from \"./redux/reduxStore\";\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from \"./App\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\n/*setInterval(()=>{\r\n    store.dispatch({type:'FAKE'})\r\n},1000)*/\r\n\r\nReactDOM.render(\r\n    <HashRouter >\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </HashRouter>, document.getElementById('root'));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FormControls_container__1kWDi\",\"formControls\":\"FormControls_formControls__2HFFk\",\"formControls__error_text\":\"FormControls_formControls__error_text__1uT77\",\"error\":\"FormControls_error__1nBJP\",\"inputField_container\":\"FormControls_inputField_container__19olS\",\"inputField\":\"FormControls_inputField__2pxa7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__wrapper\":\"Login_form__wrapper__2MPi8\",\"form\":\"Login_form__26gmI\",\"form__field\":\"Login_form__field__2aXkl\",\"form__button\":\"Login_form__button__3A7nR\",\"form__title\":\"Login_form__title__2jCYY\",\"form__group\":\"Login_form__group__1-pG-\",\"form__label\":\"Login_form__label__3zrrh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader_container\":\"Users_preloader_container__1rJAO\",\"list__container\":\"Users_list__container__2nmW-\",\"list\":\"Users_list__1fOSU\",\"listItem__container\":\"Users_listItem__container__UDoT8\",\"listItem\":\"Users_listItem__1dnrz\",\"content__container\":\"Users_content__container__JtbRs\",\"content\":\"Users_content__Csu7n\",\"status\":\"Users_status__3ITxy\",\"ava\":\"Users_ava__2fyFf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs_container\":\"Dialogs_dialogs_container__A-Yw5\",\"dialogs\":\"Dialogs_dialogs__1xLXb\",\"dialogWith\":\"Dialogs_dialogWith__2481t\",\"user__ava\":\"Dialogs_user__ava__1d7py\",\"user__name\":\"Dialogs_user__name__3CgYZ\",\"newMessages__indicator\":\"Dialogs_newMessages__indicator__2dXkL\"};","module.exports = __webpack_public_path__ + \"static/media/man.5a9e9877.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_info_container\":\"ProfileData_profile_info_container__RvqRL\",\"property_container\":\"ProfileData_property_container__2TBSu\",\"property_name\":\"ProfileData_property_name__ellnd\",\"property_value\":\"ProfileData_property_value__1OLQH\",\"checkbox\":\"ProfileData_checkbox__1z-R8\",\"toggle__show\":\"ProfileData_toggle__show__2vZ9o\",\"btn\":\"ProfileData_btn__1El0M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem__container\":\"UserItem_listItem__container__2Gw2I\",\"listItem\":\"UserItem_listItem__obHvT\",\"content__container\":\"UserItem_content__container__iqeuS\",\"content\":\"UserItem_content__25XBM\",\"status\":\"UserItem_status__tIssd\",\"ava\":\"UserItem_ava__1TMkk\"};"],"sourceRoot":""}