{"version":3,"sources":["components/Dialogs/Messages/Messages.module.css","components/Header/Header.module.css","assets/images/466.svg","common/Preloader/Preloader.module.css","assets/images/edit.svg","assets/images/gear.svg","components/Profile/MyPosts/MyPosts.module.css","assets/images/arrow.svg","components/Profile/ProfileInfo/ProfileInfo.module.css","api/api.js","redux/profileReducer.ts","redux/dialogsReducer.ts","redux/usersReducer.js","redux/authReducer.ts","redux/appReducer.ts","redux/reduxStore.js","components/hoc/withAuthRedirect.jsx","components/Users/UserItem.jsx","components/Dialogs/DialogsList.jsx","common/Preloader/Preloader.jsx","components/Dialogs/DialogsContainer.jsx","redux/usersSelectors.js","components/Users/UsersList.jsx","components/Users/UsersContainer.jsx","components/Profile/ProfileStatus/ProfileStatusWithHooks.jsx","common/FormControls/FormControls.jsx","utilites/validators/validators.js","components/Profile/ProfileInfo/ProfileData/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileData/ProfileData.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/Post/PostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/Profile.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/Dialogs/Messages/Message.jsx","components/Dialogs/MessageForm.jsx","components/Dialogs/Messages/Messages.jsx","redux/dialogsSelectors.js","components/Dialogs/Messages/MessagesContainer.jsx","App.js","index.js","common/FormControls/FormControls.module.css","components/Login/Login.module.css","components/Users/Users.module.css","assets/images/man.svg","components/Users/UserItem.module.css","components/Profile/ProfileInfo/ProfileData/ProfileData.module.css","components/Profile/MyPosts/Post/Post.module.css"],"names":["module","exports","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageUsersAmount","get","authAPI","then","response","data","email","password","rememberMe","captcha","post","delete","profileAPI","id","userId","status","put","file","formData","FormData","append","followAPI","followToUser","unfollowToUser","securityAPI","dialogsAPI","message","body","ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_STATUS","SAVE_PHOTO_SUCCES","initialState","posts","postText","likeCounter","profile","addPost","newPost","type","setUserProfile","setStatus","savePhotoSuccess","photos","profileReducer","state","action","filter","SET_DIALOGS","SET_MESSAGES","SET_NEWMESSAGES_COUNT","SET_CURRENT_USER","SEND_MESSAGE","CREATE_DIALOG","TOGGLE_IS_LOADING","dialogs","messages","newMessagesCount","currentUser","isLoading","setMessages","setCurrentUser","setIsLoading","dialogsReducer","number","user","length","FOLLOW","UNFOLLOW","SET_USERS","SET_MORE_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS","users","pageSize","totalUsersCount","followingInProgress","followUser","unfollowUser","setUsers","setCurrentPage","pageNumber","setTotalUsersCount","totalUsers","setInProgress","inProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","map","followed","usersss","SET_USER_DATA","SET_AUTH_PROFILE","SET_CAPTCHA","login","isAuth","authProfile","setAuthUserData","payload","setCaptcha","setAuthProfile","getAuthUserData","getCaptcha","url","authReducer","SET_INITIALIZED","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","usersPage","auth","app","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","mapStateToPropsForRedirect","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","UserItem","userName","userStatus","userPhoto","path","style","className","s","listItem__container","listItem","ava","src","defaultPhoto","alt","content__container","content","DialogsList","Row","index","small","lastSeen","lastUserActivityDate","list","height","width","itemCount","itemSize","window_list","Preloader","container","loading","DialogsContainer","requestDialogs","requestNewMessagesCount","list__container","newMessageText","messagesCount","getUsers","getPageSize","getTotalUsersCount","getCurrentPage","getIsLoading","getFollowingInProgress","UsersList","hasNextPage","isNextPageLoading","loadNextPage","items","loadMoreItems","isItemLoaded","name","styles","minimumBatchSize","threshold","onItemsRendered","ref","UsersContainer","startIndex","stopIndex","itemsNumber","Math","ceil","requestMoreUsers","requestUsers","follow","bind","unfollow","totalCount","onPageChanged","currentPageNumber","ProfileStatusWithHooks","useState","editMode","setEditMode","useEffect","user__profile__status__container","user__profile__status","saved_status","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","input_status","isOwner","onClick","user__profile__status__edit","editIcon","Textarea","input","meta","hasError","touched","error","cn","formControls","inputField_container","inputField","Input","createField","placeholder","validators","component","text","field","Field","validate","required","undefined","maxLengthCreator","maxLength","ProfileDataFormRedux","reduxForm","onSubmit","handleSubmit","profile_info_container","property_container","property_name","property_value","checkbox","Object","keys","contacts","key","btn","Contact","contactTitle","contactValue","shadow","ProfileData","showContacts","activateEditMode","activateShowContacts","aboutMe","lookingForAJob","lookingForAJobDescription","toggle__show","ProfileInfo","savePhoto","saveProfileData","startChatting","setShowContacts","user__profile","user__profile__title","user__profile__name","fullName","user__profile__settings__btn","user__profile__container","user__profile__photo__block","user__profile__photo","large","photo","target","files","input__file","for","s_p","user__profile__information","initialValues","Post","item","likes","maxLength5","PostReduxForm","MyPosts","postsOnWall","values","Profile","newTextInPost","updateUserStatus","ProfileContainer","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","snapshot","alert","console","log","getState","errorMessage","stopSubmit","_error","Promise","reject","withRouter","Header","active","setActive","avatar","setAvatar","header","header__body","onTouchEnd","header__menu","header__list","header__link","header__burger","header__auth","header__auth__info","header__auth__content","header__auth__name","header__auth__logout","logout","header__auth__ava","header__auth__login","header__login","HeaderContainer","currentProfileData","refreshProfileData","LoginReduxForm","form__group","form__field","form__label","form__button","form__wrapper","form__title","Message","messageText","addedAt","owner","authId","message__container","message__user__name","message__wrapper","owner_color","message__text","message__add__time","formatDistanceToNow","addSuffix","MessageReduxForm","message__form","message__send__button","message__field","autocompele","Messages","userData","sendMessage","userAva","messagesAll","m","senderName","senderId","parseIso","messages__container","messages__header","messages__header_button","arrow","header__user_name","header__user_photo_box","header__user_photo_image","messages__box","message__form_container","getMessages","getCurrentUserID","getCurrentUserData","d","getAuthId","MessagesContainer","currentUserId","requestMessages","sendNewMessage","currentUserData","reset","App","initializeApp","exact","render","promise","all","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0e748766.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages__container\":\"Messages_messages__container__33cyS\",\"messages__header\":\"Messages_messages__header__2KWaD\",\"messages__header_button\":\"Messages_messages__header_button__3ovh2\",\"header__user_name\":\"Messages_header__user_name__25K-9\",\"header__user_photo_box\":\"Messages_header__user_photo_box__Mkzp8\",\"header__user_photo_image\":\"Messages_header__user_photo_image__1HGIN\",\"messages__box\":\"Messages_messages__box__2fXkZ\",\"message__container\":\"Messages_message__container__3rEed\",\"message__wrapper\":\"Messages_message__wrapper__1_9Ea\",\"owner\":\"Messages_owner__2Om5O\",\"owner_color\":\"Messages_owner_color__2qeaF\",\"message__user__name\":\"Messages_message__user__name__1b-Ls\",\"message__text\":\"Messages_message__text__1k32F\",\"message__add__time\":\"Messages_message__add__time__10xO-\",\"message__form\":\"Messages_message__form__31KQ8\",\"message__field\":\"Messages_message__field__3dGL9\",\"message__send__button\":\"Messages_message__send__button__ODKRc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1etFM\",\"container\":\"Header_container__1Oqyp\",\"header__body\":\"Header_header__body__2UT7o\",\"header__menu\":\"Header_header__menu__1WMv5\",\"header__burger\":\"Header_header__burger__1BeK2\",\"header__list\":\"Header_header__list__2rlgu\",\"header__link\":\"Header_header__link__2w6uR\",\"active\":\"Header_active__3Ko8N\",\"header__auth\":\"Header_header__auth__hbZg5\",\"header__auth__info\":\"Header_header__auth__info__6m0qU\",\"header__auth__content\":\"Header_header__auth__content__2sdx8\",\"header__auth__name\":\"Header_header__auth__name__3lOMv\",\"header__auth__ava\":\"Header_header__auth__ava__2Idgu\",\"header__auth__logout\":\"Header_header__auth__logout__2jUkw\",\"header__auth__login\":\"Header_header__auth__login__ecDlA\"};","module.exports = __webpack_public_path__ + \"static/media/466.b5b1dbdf.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Preloader_container__3mNA2\"};","module.exports = __webpack_public_path__ + \"static/media/edit.33ae1541.svg\";","module.exports = __webpack_public_path__ + \"static/media/gear.a411a4d3.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__1ICs_\"};","module.exports = __webpack_public_path__ + \"static/media/arrow.6c9efe0c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user__profile\":\"ProfileInfo_user__profile__yozWI\",\"user__profile__title\":\"ProfileInfo_user__profile__title__396i9\",\"user__profile__name\":\"ProfileInfo_user__profile__name__2fDb3\",\"user__profile__settings__btn\":\"ProfileInfo_user__profile__settings__btn__3-b9V\",\"user__profile__status__container\":\"ProfileInfo_user__profile__status__container__3Sozg\",\"user__profile__status\":\"ProfileInfo_user__profile__status__2qvr1\",\"user__profile__status__edit\":\"ProfileInfo_user__profile__status__edit__3_odt\",\"input_status\":\"ProfileInfo_input_status__1m5Er\",\"saved_status\":\"ProfileInfo_saved_status__2w20_\",\"user__profile__container\":\"ProfileInfo_user__profile__container__1Fsf-\",\"user__profile__photo__block\":\"ProfileInfo_user__profile__photo__block__30-Oh\",\"user__profile__photo\":\"ProfileInfo_user__profile__photo__2qd9u\",\"input__file\":\"ProfileInfo_input__file__3P00C\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\"API-KEY\": \"47ad904e-927d-48cc-9957-38180f91f4d5\"},\r\n//ya:374b61b3-3684-46aa-832c-9d3f951a688f,klubn:9a26a650-26b0-4c4b-8aab-54c45ef378c9,gm:\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageUsersAmount) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageUsersAmount}`)\r\n    }\r\n};\r\nexport const authAPI = {\r\n\r\n    me() {\r\n        return instance.get('auth/me')\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post('auth/login', {email, password, rememberMe, captcha})\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n    }\r\n};\r\nexport const profileAPI = {\r\n\r\n    getUserProfile(id) {\r\n        return instance.get(`profile/${id}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getUserStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    updateUserStatus(status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n    },\r\n    savePhoto(file) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", file);\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    saveProfileData(formData) {\r\n        return instance.put(`profile`, formData)\r\n    }\r\n};\r\n\r\nexport const followAPI = {\r\n    followToUser(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    unfollowToUser(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    }\r\n};\r\nexport const securityAPI = {\r\n    getCapthaUrl() {\r\n        return instance.get('security/get-captcha-url')\r\n    }\r\n};\r\n\r\nexport const dialogsAPI = {\r\n    //get all dialogs\r\n    getDialogs() {\r\n        return instance.get('dialogs')\r\n    },\r\n    //start chatting\r\n    startChatting(userId) {\r\n        return instance.put(`dialogs/${userId}`)\r\n    },\r\n    //get list of messages with user\r\n    getDialogWithUser(userId) {\r\n        return instance.get(`dialogs/${userId}/messages`)\r\n    },\r\n    //send message to user\r\n    sendMessage(userId, message) {\r\n        return instance.post(`dialogs/${userId}/messages`, {body: message})\r\n    },\r\n    //count new messages\r\n    getNewMessagesCount() {\r\n        return instance.get('dialogs/messages/new/count')\r\n    }\r\n};\r\n\r\n","import {profileAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'socialNetwork/profile/ADD_POST';\r\nconst DELETE_POST = 'socialNetwork/profile/DELETE_POST';\r\nconst SET_USER_PROFILE = 'socialNetwork/profile/SET_USER_PROFILE';\r\nconst LOOKING_FOR_JOB = 'socialNetwork/profile/LOOKING_FOR_JOB';\r\nconst SET_STATUS = 'socialNetwork/profile/SET_STATUS';\r\nconst SAVE_PHOTO_SUCCES = 'socialNetwork/profile/SAVE_PHOTO_SUCCES';\r\n\r\ntype PostType = {\r\n    userId: number,\r\n    postText: string,\r\n    likeCounter: number\r\n}\r\n\r\ntype ProfileType = {\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: ContactsType\r\n    photos: PhotosType\r\n}\r\n\r\ntype ContactsType = {\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string\r\n    mainLink: string\r\n}\r\n\r\ntype PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {userId: 1, postText: 'How r u?', likeCounter: 1},\r\n        {userId: 2, postText: 'Hi!', likeCounter: 0},\r\n        {userId: 3, postText: 'What?', likeCounter: 5},\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    //lookingForAJob: false,\r\n    status: '',\r\n};\r\n\r\nexport type initialStateType = typeof initialState;\r\n\r\nconst profileReducer = (state = initialState, action:any):initialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {userId: 6, postText: action.newPost, likeCounter: 0}]\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post.userId != action.id)\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        // case LOOKING_FOR_JOB:\r\n        //     return {\r\n        //         ...state,\r\n        //         lookingForAJob: action.isLookingForAJob\r\n        //     }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case SAVE_PHOTO_SUCCES:\r\n            return {\r\n                ...state,\r\n                //Need refactor type\r\n                profile: {...state.profile, photos: action.file} as ProfileType\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype AddPostType = {\r\n    type: typeof ADD_POST\r\n    newPost: string\r\n}\r\nexport const addPost = (newPost: string):AddPostType => ({type: ADD_POST, newPost});\r\ntype DeletePostType = {\r\n    type: typeof DELETE_POST\r\n    id: number\r\n}\r\nexport const deletePost = (id: number): DeletePostType => ({type: DELETE_POST, id});\r\ntype SetUserProfileType = {\r\n    type: typeof SET_USER_PROFILE\r\n    profile: ProfileType\r\n}\r\nexport const setUserProfile = (profile: ProfileType): SetUserProfileType => ({type: SET_USER_PROFILE, profile});\r\ntype SetStatusType = {\r\n    type: typeof SET_STATUS\r\n    status: string\r\n}\r\nexport const setStatus = (status: string): SetStatusType => ({type: SET_STATUS, status});\r\ntype SavePhotoSuccessType = {\r\n    type: typeof SAVE_PHOTO_SUCCES\r\n    photos: PhotosType\r\n}\r\nexport const savePhotoSuccess = (photos: PhotosType): SavePhotoSuccessType => ({type: SAVE_PHOTO_SUCCES, photos});\r\n\r\n\r\nexport const getUserProfile = (id: number) => async (dispatch: any) => {\r\n    const data = await profileAPI.getUserProfile(id);\r\n    dispatch(setUserProfile(data));\r\n};\r\n\r\nexport const getUserStatus = (userId: number) => async (dispatch: any) => {\r\n    const data = await profileAPI.getUserStatus(userId);\r\n    dispatch(setStatus(data));\r\n};\r\n\r\nexport const updateUserStatus = (status: string) => async (dispatch: any) => {\r\n    try {\r\n        const response = await profileAPI.updateUserStatus(status);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status))\r\n        }\r\n    }\r\n    catch (error) {\r\n\r\n        alert('error')\r\n        console.error(error)\r\n        console.log(error)\r\n    }\r\n\r\n}\r\n\r\nexport const savePhoto = (photos: PhotosType) => async (dispatch: any) => {\r\n    const response = await profileAPI.savePhoto(photos);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos))\r\n    }\r\n};\r\n\r\nexport const saveProfileData = (profile: ProfileType) => async (dispatch: any,getState: any) => {\r\n    let response = await profileAPI.saveProfileData(profile);\r\n    if (response.data.resultCode === 0) {\r\n\r\n        const userId=getState().auth.id;\r\n        const data = await profileAPI.getUserProfile(userId);\r\n        dispatch(setUserProfile(data));\r\n    }\r\n    else {\r\n        let errorMessage = response.data.messages.length > 0 ? response.data.messages[0] : 'Oops';\r\n        console.log(errorMessage)\r\n        dispatch(stopSubmit('profileData', {_error: errorMessage}));\r\n        return Promise.reject(errorMessage)\r\n    }\r\n}\r\n\r\nexport default profileReducer;","import {dialogsAPI} from \"../api/api\";\r\nimport {reset} from 'redux-form';\r\n\r\nconst SET_DIALOGS = 'socialNetwork/dialogs/SET_DIALOGS';\r\nconst SET_MESSAGES = 'socialNetwork/dialogs/SET_MESSAGES';\r\nconst SET_NEWMESSAGES_COUNT = 'socialNetwork/dialogs/SET_NEWMESSAGES_COUNT';\r\nconst SET_CURRENT_USER = 'socialNetwork/dialogs/SET_CURRENT_USER';\r\nconst SEND_MESSAGE = 'socialNetwork/dialogs/SEND_MESSAGE';\r\nconst CREATE_DIALOG = 'socialNetwork/dialogs/CREATE_DIALOG';\r\nconst TOGGLE_IS_LOADING = 'socialNetwork/dialogs/TOGGLE_IS_LOADING';\r\n\r\nexport type DialogType = {\r\n    id: number\r\n    userName: string\r\n    hasNewMessages: boolean\r\n    lastDialogActivityDate: string\r\n    lastUserActivityDate: string\r\n    newMessagesCount: number\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\n\r\nexport type MessagesItemsType = {\r\n    id: string\r\n    body: string\r\n    translatedBody: null|string\r\n    addedAt: string\r\n    senderId: number\r\n    senderName: string,\r\n    recipientId: number\r\n    viewed: boolean\r\n}\r\n\r\nexport type MessagesType = {\r\n    items:  MessagesItemsType\r\n    totalCount: number\r\n    error: null\r\n}\r\n\r\nlet initialState = {\r\n    dialogs: [] as Array<DialogType>,\r\n    messages: [],\r\n    newMessagesCount:null,\r\n    currentUser: null,\r\n    isLoading:false\r\n};\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\nconst dialogsReducer = (state = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_DIALOGS :\r\n            return {\r\n                ...state,\r\n                dialogs: [...action.dialogs]\r\n            };\r\n        case SET_MESSAGES :\r\n            return {\r\n                ...state,\r\n                messages: [...action.messages]\r\n            };\r\n        case TOGGLE_IS_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            };\r\n        case SET_NEWMESSAGES_COUNT :\r\n            return {\r\n                ...state,\r\n                newMessagesCount: action.number\r\n            };\r\n        case SET_CURRENT_USER :\r\n            return {\r\n                ...state,\r\n                currentUser: action.user\r\n            };\r\n        case SEND_MESSAGE :\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, ...action.message]\r\n            };\r\n        case CREATE_DIALOG :\r\n            if (state.dialogs.length) {\r\n                return {\r\n                    ...state,\r\n                    dialogs: [...state.dialogs, ...action.user]\r\n                };\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    dialogs: [...action.user]\r\n                };\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype setDialogsActionCreatorType = {\r\n    type: typeof SET_DIALOGS\r\n    dialogs: DialogType\r\n}\r\n\r\ntype setMessagesActionCreatorType = {\r\n    type: typeof SET_MESSAGES\r\n    messages: MessagesType\r\n}\r\n\r\ntype setNewMessagesCountActionCreatorType = {\r\n    type: typeof SET_NEWMESSAGES_COUNT\r\n    number: number\r\n}\r\n\r\ntype setCurrentUserActionCreatorType = {\r\n    type: typeof SET_CURRENT_USER\r\n    userId: number\r\n}\r\n\r\ntype sendMessageActionCreatorType = {\r\n    type: typeof SEND_MESSAGE\r\n    message: string\r\n}\r\ntype createDialogActionCreatorType = {\r\n    type: typeof CREATE_DIALOG\r\n    userId: number\r\n}\r\ntype setIsLoadingActionCreatorType = {\r\n    type: typeof TOGGLE_IS_LOADING\r\n    isLoading: boolean\r\n}\r\n\r\nexport const setDialogs = (dialogs: DialogType): setDialogsActionCreatorType => ({type: SET_DIALOGS, dialogs});\r\nexport const setMessages = (messages: MessagesType): setMessagesActionCreatorType=> ({type: SET_MESSAGES, messages});\r\nexport const setNewMessagesCount = (number: number): setNewMessagesCountActionCreatorType => ({type: SET_NEWMESSAGES_COUNT, number});\r\nexport const setCurrentUser = (userId:number): setCurrentUserActionCreatorType => ({type: SET_CURRENT_USER, userId});\r\nexport const sendMessage = (message: string): sendMessageActionCreatorType => ({type: SEND_MESSAGE, message});\r\nexport const createDialog = (userId: number): createDialogActionCreatorType => ({type: CREATE_DIALOG, userId});\r\nexport const setIsLoading = (isLoading: boolean): setIsLoadingActionCreatorType => ({type: TOGGLE_IS_LOADING, isLoading});\r\n\r\nexport const requestDialogs = () => async (dispatch: any) => {\r\n    let response = await dialogsAPI.getDialogs();\r\n    dispatch(setDialogs(response.data));\r\n};\r\n\r\nexport const startChatting = (userId: number) => async (dispatch: any) => {\r\n    let response = await dialogsAPI.startChatting(userId)\r\n};\r\n\r\nexport const requestMessages = (userId: number) => async (dispatch: any) => {\r\n    dispatch(setIsLoading(true));\r\n    dispatch(setCurrentUser(userId));\r\n    let response = await dialogsAPI.getDialogWithUser(userId);\r\n    let messages = response.data.items;\r\n    dispatch(setMessages(messages));\r\n    dispatch(setIsLoading(false))\r\n};\r\n\r\nexport const sendNewMessage = (userId: number, message: string) => async (dispatch: any) => {\r\n\r\n    const response = await dialogsAPI.sendMessage(userId, message);\r\n    if (response.data.resultCode === 0) {\r\n        let response = await dialogsAPI.getDialogWithUser(userId);\r\n        let messages = response.data.items;\r\n        dispatch(setMessages(messages));\r\n        dispatch(reset('message'))\r\n    }\r\n};\r\n\r\nexport const requestNewMessagesCount = () => async (dispatch: any) => {\r\n\r\n    const response = await dialogsAPI.getNewMessagesCount();\r\n    let messagesCount = response.data;\r\n    dispatch(setNewMessagesCount(messagesCount));\r\n};\r\n\r\nexport default dialogsReducer;","import {followAPI, usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'socialNetwork/users/FOLLOW';\r\nconst UNFOLLOW = 'socialNetwork/users/UNFOLLOW';\r\nconst SET_USERS = 'socialNetwork/users/SET_USERS';\r\nconst SET_MORE_USERS = 'socialNetwork/users/SET_MORE_USERS';\r\nconst SET_CURRENT_PAGE = 'socialNetwork/users/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS = 'socialNetwork/users/SET_TOTAL_USERS';\r\nconst TOGGLE_IS_LOADING = 'socialNetwork/users/TOGGLE_IS_LOADING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'socialNetwork/users/TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 20,\r\n    currentPage: 1,\r\n    followingInProgress: [2],\r\n    isLoading: false,\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: true}\r\n                    }\r\n                    return user;\r\n                })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: false}\r\n                    }\r\n                    return user;\r\n                })\r\n            };\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        case SET_MORE_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...state.users,...action.usersss]\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.pageNumber\r\n            }\r\n        case SET_TOTAL_USERS:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsers\r\n            }\r\n        case TOGGLE_IS_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.inProgress\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followUser = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowUser = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setMoreUsers = (usersss) => ({type: SET_MORE_USERS, usersss});\r\nexport const setCurrentPage = (pageNumber) => ({type: SET_CURRENT_PAGE, pageNumber});\r\nexport const setTotalUsersCount = (totalUsers) => ({type: SET_TOTAL_USERS, totalUsers});\r\nexport const setIsLoading = (isLoading) => ({type: TOGGLE_IS_LOADING, isLoading});\r\nexport const setInProgress = (inProgress, userId) => {\r\n    return {type: TOGGLE_IS_FOLLOWING_PROGRESS, inProgress, userId}\r\n};\r\nexport const requestUsers = (currentPage, pageSize) => {\r\n\r\n    return async (dispatch) => {\r\n        dispatch(setIsLoading(true));\r\n        let response = await usersAPI.getUsers(currentPage, pageSize);\r\n        dispatch(setIsLoading(false));\r\n        dispatch(setUsers(response.data.items));\r\n        dispatch(setTotalUsersCount(response.data.totalCount))\r\n    }\r\n};\r\n\r\nexport const requestMoreUsers = (currentPage, pageSize) => {\r\n\r\n    return async (dispatch) => {\r\n        dispatch(setIsLoading(true));\r\n        let response = await usersAPI.getUsers(currentPage , pageSize);\r\n        dispatch(setIsLoading(false));\r\n        dispatch(setMoreUsers(response.data.items));\r\n        dispatch(setTotalUsersCount(response.data.totalCount))\r\n    }\r\n};\r\n\r\nexport const onPageChanged = (currentPageNumber, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(setIsLoading(true));\r\n        dispatch(setCurrentPage(currentPageNumber));\r\n        let response = await usersAPI.getUsers(currentPageNumber, pageSize)\r\n        dispatch(setIsLoading(false));\r\n        dispatch(setUsers(response.data.items));\r\n    }\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(setInProgress(true, userId));\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(setInProgress(false, userId));\r\n};\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(\r\n            dispatch,\r\n            userId,\r\n            followAPI.followToUser.bind(followAPI),\r\n            unfollowUser)\r\n    }\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(\r\n            dispatch,\r\n            userId,\r\n            followAPI.unfollowToUser.bind(followAPI),\r\n            followUser)\r\n    }\r\n};\r\n\r\nexport default usersReducer;","import {authAPI, profileAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst SET_USER_DATA = 'socialNetwork/auth/SET_USER_DATA';\r\nconst SET_AUTH_PROFILE = 'socialNetwork/auth/SET_AUTH_PROFILE';\r\nconst SET_CAPTCHA = 'socialNetwork/auth/SET_CAPTCHA';\r\n\r\n// export type initialStateType = {\r\n//     id: number | null\r\n//     email: string | null\r\n//     login: string | null\r\n//     isAuth: boolean\r\n//     captcha: string | null,\r\n//     authProfile: object | null,\r\n// };\r\n\r\nlet initialState = {\r\n    id: null as null|number,\r\n    email: null as null|string,\r\n    login: null as null|string,\r\n    isAuth: false,\r\n    captcha: null as null|string,\r\n    authProfile:null\r\n};\r\n\r\nexport type initialStateType = typeof initialState;\r\n\r\nconst authReducer = (state = initialState, action: any) : initialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case SET_CAPTCHA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case SET_AUTH_PROFILE:\r\n            return {\r\n                ...state,\r\n                authProfile: action.payload,\r\n                isAuth: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype setAuthUserDataActionPayloadCreatorType = {\r\n    email: string | null\r\n    id: number | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\ntype setAuthUserDataActionCreatorType = {\r\n    type: typeof SET_USER_DATA,\r\n    payload: setAuthUserDataActionPayloadCreatorType\r\n}\r\n\r\nexport const setAuthUserData = (email: string | null, id: number | null, login: string | null, isAuth: boolean) : setAuthUserDataActionCreatorType => ({\r\n    type: SET_USER_DATA,\r\n    payload: {email, id, login, isAuth}\r\n});\r\n\r\ntype setCaptchaType = {\r\n    type: typeof SET_CAPTCHA,\r\n    payload: {captcha: string}\r\n}\r\n\r\nexport const setCaptcha = (captcha: string) : setCaptchaType => ({\r\n    type: SET_CAPTCHA,\r\n    payload: {captcha}\r\n});\r\n\r\ntype setAuthProfileActionPayloadType = {\r\n    aboutMe: string,\r\n    contacts: {\r\n        facebook: string | null\r\n        website: string | null\r\n        vk: string | null\r\n        twitter: string | null\r\n        instagram: string | null\r\n        youtube: string | null\r\n        github: string | null\r\n        mainLink: string | null\r\n    },\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string | null,\r\n    fullName: string | null,\r\n    userId: number,\r\n    photos: {\r\n        small: string | null\r\n        large: string | null\r\n    }\r\n}\r\n\r\ntype setAuthProfileActionType = {\r\n    type: typeof SET_AUTH_PROFILE\r\n    payload: setAuthProfileActionPayloadType\r\n}\r\n\r\nexport const setAuthProfile = (data: setAuthProfileActionPayloadType) : setAuthProfileActionType => ({type: SET_AUTH_PROFILE, payload: data});\r\n\r\nexport const getAuthUserData = () => async (dispatch: any) => {\r\n    let response = await authAPI.me();\r\n\r\n    if (response.resultCode === 0) {\r\n        let {email, id, login} = response.data;\r\n        dispatch(setAuthUserData(email, id, login, true));\r\n        profileAPI.getUserProfile(id)\r\n            .then((data: any )=> {\r\n                dispatch(setAuthProfile(data))\r\n            })\r\n    }\r\n};\r\n\r\nexport const refreshProfileData = (id: number) => (dispatch: any) => {\r\n    profileAPI.getUserProfile(id)\r\n        .then((data: setAuthProfileActionPayloadType ) => {\r\n            dispatch(setAuthProfile(data))\r\n        })\r\n};\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string) => async (dispatch: any) => {\r\n    let response = await authAPI.login(email, password, rememberMe,captcha);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptcha())\r\n        }\r\n\r\n        let errorMessage = response.data.messages.length > 0 ? response.data.messages[0] : 'Oops'\r\n        dispatch(stopSubmit('login', {_error: errorMessage}))\r\n    }\r\n};\r\n\r\nexport const getCaptcha = () => async (dispatch: any) => {\r\n    debugger;\r\n    let response = await securityAPI.getCapthaUrl();\r\n    const captcha = (response.data.url)\r\n    dispatch(setCaptcha(captcha))\r\n};\r\n\r\n\r\nexport const logout = () => async (dispatch: any) => {\r\n    let response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n};\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./authReducer\";\r\n\r\nconst SET_INITIALIZED = 'socialNetwork/app/SET_INITIALIZED';\r\n\r\nexport type initialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nlet initialState : initialStateType = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action:any) : initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype initializedSuccesActionType = {\r\n    type: typeof SET_INITIALIZED\r\n}\r\n\r\nexport const initialized = () : initializedSuccesActionType => ({type: SET_INITIALIZED});\r\n\r\nexport const initializeApp = () => (dispatch:any) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initialized())\r\n    })\r\n};\r\n\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers(\r\n    {\r\n        profilePage: profileReducer,\r\n        dialogsPage: dialogsReducer,\r\n        usersPage: usersReducer,\r\n        auth: authReducer,\r\n        app: appReducer,\r\n        form: formReducer\r\n    }\r\n);\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    auth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.auth) {\r\n                return <Redirect to={'/login'}/>\r\n            }\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent\r\n\r\n};","import React from 'react';\r\nimport s from \"./UserItem.module.css\";\r\nimport defaultPhoto from \"../../assets/images/man.svg\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst UserItem = ({ userName, userStatus, userPhoto, path, style }) => {\r\n\r\n    return (\r\n        <NavLink to={path}>\r\n            <div className={s.listItem__container} style={style}>\r\n                <div className={s.listItem}>\r\n                    <div className={s.ava}>\r\n                        <img src={ userPhoto ? userPhoto : defaultPhoto} alt='userPhoto'/>\r\n                    </div>\r\n                    <div className={s.content__container}>\r\n                        <div className={s.content}>\r\n                            {userName}\r\n                        </div>\r\n                        <div className={s.status}>\r\n                            {userStatus}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </NavLink>\r\n    )\r\n};\r\n\r\nexport default UserItem;","import React from 'react';\r\nimport {FixedSizeList as List} from \"react-window\";\r\nimport s from \"../Users/Users.module.css\";\r\nimport AutoSizer from \"react-virtualized-auto-sizer\";\r\nimport UserItem from \"../Users/UserItem\";\r\n\r\nconst DialogsList = ({ dialogs }) => {\r\n\r\n    const Row = ({ index, style }) => {\r\n        \r\n        let user = dialogs[index];\r\n\r\n        let path = `/dialogs/${user.id}/messages`;\r\n\r\n        return (<UserItem path={path}\r\n                          style={style}\r\n                          userPhoto={user.photos.small}\r\n                          userName={user.userName}\r\n                          lastSeen={user.lastUserActivityDate}\r\n            />\r\n        )\r\n    };\r\n\r\n    return (<div className={s.list}>\r\n                <AutoSizer>\r\n                    {({ height, width }) => (\r\n\r\n                        <List\r\n                            height={height}\r\n                            itemCount={dialogs.length}\r\n                            itemSize={100}\r\n                            width={width}\r\n                            className={s.window_list}\r\n                        >\r\n                            {Row}\r\n                        </List>\r\n                    )}\r\n                </AutoSizer>\r\n        </div>\r\n\r\n\r\n    )\r\n};\r\n\r\nexport default DialogsList;\r\n\r\n","import React from 'react'\r\nimport loading from '../../assets/images/466.svg';\r\nimport s from './Preloader.module.css'\r\n\r\nconst Preloader=()=>{\r\n    return (\r\n        <div className={s.container}>\r\n            <img src={loading} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {requestDialogs, requestNewMessagesCount} from \"../../redux/dialogsReducer\";\r\nimport DialogsList from \"./DialogsList\";\r\nimport s from \"../Users/Users.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\n\r\n\r\nclass DialogsContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.requestDialogs();\r\n        this.props.requestNewMessagesCount()\r\n    }\r\n\r\n    render() {\r\n        return (<div className={s.list__container}>\r\n                {this.props.dialogs.length > 0 ? <DialogsList\r\n                    dialogs={this.props.dialogs}\r\n                /> : <Preloader/>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        newMessageText: state.dialogsPage.newMessageText\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {requestDialogs,requestNewMessagesCount})\r\n)(DialogsContainer)","export const getUsers = (state) => {\r\n    return state.usersPage.users\r\n};\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n};\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n};\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n};\r\nexport const getIsLoading = (state) => {\r\n    return state.usersPage.isLoading\r\n};\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n};\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport styles from \"./Users.module.css\";\r\nimport AutoSizer from \"react-virtualized-auto-sizer\";\r\nimport InfiniteLoader from \"react-window-infinite-loader\";\r\nimport {FixedSizeList as List} from \"react-window\"\r\nimport UserItem from \"./UserItem\";\r\n\r\nconst UsersList = ({users, hasNextPage,isNextPageLoading,loadNextPage,totalUsers}) => {\r\n\r\n    let items = users;\r\n\r\n    const itemCount = totalUsers;\r\n\r\n    const loadMoreItems = isNextPageLoading ? () => {} : loadNextPage;\r\n\r\n    const isItemLoaded = index => !hasNextPage || index < items.length;\r\n\r\n    const Row = ({index, style}) => {\r\n\r\n        let userPhoto,userName,userStatus,user,userId;\r\n\r\n        if (!isItemLoaded(index)) {\r\n\r\n            userId = '';\r\n            userPhoto = false;\r\n            userName = 'Loading...';\r\n            userStatus= 'Loading...';\r\n        } else {\r\n            user = items[index];\r\n            userId = user.id;\r\n            userPhoto = user.photos.small;\r\n            userName = user.name;\r\n            userStatus= user.status\r\n        }\r\n\r\n        let path = '/profile/' + userId;\r\n\r\n        return (\r\n            <UserItem path={path}\r\n                      style={style}\r\n                      userName={userName}\r\n                      userPhoto={userPhoto}\r\n                      userStatus={userStatus}/>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={styles.list}>\r\n            <AutoSizer >\r\n                {({ height, width }) => (\r\n                    <InfiniteLoader\r\n                        isItemLoaded={isItemLoaded}\r\n                        loadMoreItems={loadMoreItems}\r\n                        itemCount={itemCount}\r\n                        minimumBatchSize={50}\r\n                        threshold={25}\r\n                    >\r\n                        {({ onItemsRendered, ref }) => (\r\n                            <List\r\n                                height={height}\r\n                                itemCount={itemCount}\r\n                                itemSize={100}\r\n                                width={width}\r\n                                ref={ref}\r\n                                onItemsRendered={onItemsRendered}\r\n                                className={styles.window_list}\r\n                            >\r\n                                {Row}\r\n                            </List>\r\n                        )}\r\n                    </InfiniteLoader>\r\n                )}\r\n            </AutoSizer>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default UsersList;\r\n\r\n","import {connect} from 'react-redux'\r\nimport React from 'react'\r\nimport {\r\n    setInProgress, onPageChanged, follow, unfollow, requestUsers, requestMoreUsers, setCurrentPage, setUsers\r\n} from '../../redux/usersReducer';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage, getFollowingInProgress,\r\n    getIsLoading, getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/usersSelectors\";\r\nimport UsersList from \"./UsersList\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport s from './Users.module.css'\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, 100);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //this.props.setCurrentPage(1);\r\n        //this.props.setUsers([]);\r\n    }\r\n\r\n    loadNextPage = (startIndex,stopIndex) => {\r\n\r\n        let itemsNumber = (stopIndex - startIndex)+1;\r\n        let pageNumber = Math.ceil((startIndex+1)/itemsNumber);\r\n        this.props.requestMoreUsers(pageNumber,itemsNumber)\r\n    };\r\n\r\n    render() {\r\n        return (<div className={s.list__container}>\r\n                {this.props.users.length>0 ?\r\n                    <UsersList\r\n                        users={this.props.users}\r\n                        hasNextPage={true}\r\n                        isNextPageLoading={this.props.isLoading}\r\n                        loadNextPage={this.loadNextPage}\r\n                        totalUsers={this.props.totalUsersCount}\r\n                    /> : <Preloader/>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isLoading: getIsLoading(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setInProgress,\r\n        requestUsers,\r\n        requestMoreUsers,\r\n        setCurrentPage,\r\n        setUsers,\r\n        onPageChanged\r\n    }),\r\n    withAuthRedirect\r\n)(UsersContainer)\r\n","import React, {useState, useEffect} from 'react'\r\nimport s from \"../ProfileInfo/ProfileInfo.module.css\";\r\nimport editIcon from '../../../assets/images/edit.svg'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    const [editMode,setEditMode] = useState(false);\r\n    const [status,setStatus] = useState(props.status);\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    },[props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        if (props.isOwner) {\r\n            setEditMode(true)}\r\n\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n\r\n        return (\r\n            <div className={s.user__profile__status__container}>\r\n\r\n                {!editMode &&\r\n                    <div className={s.user__profile__status}>\r\n                        <span className={s.saved_status}>{props.status|| \"...status\"}</span>\r\n                    </div>}\r\n                {editMode &&\r\n                    <div className={s.user__profile__status}>\r\n                        <input onChange={onStatusChange} autoFocus={true}\r\n                               onBlur={deactivateEditMode} value={status} className={s.input_status}>\r\n\r\n                        </input>\r\n                    </div>}\r\n                {props.isOwner && <div onClick={activateEditMode} className={s.user__profile__status__edit}>\r\n                    <img src={editIcon} alt='editIcon'/>\r\n                </div>}\r\n            </div>\r\n        )\r\n    };\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport cn from 'classnames'\r\nimport styles from './FormControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n\r\n    const hasError = (meta.touched && meta.error);\r\n\r\n    return (\r\n        <div className={cn(styles.container,{[styles.formControls]:hasError})}>\r\n            <div className={styles.inputField_container}>\r\n                <textarea {...input} {...props} className={styles.inputField}/>\r\n            </div>\r\n            <div >\r\n                {hasError && <span> {meta.error} </span>}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n\r\n    const hasError = (meta.touched && meta.error);\r\n\r\n    return (\r\n        <div className={cn({[styles.formControls]:hasError})}>\r\n            <div >\r\n                <input {...input} {...props} className={styles.inputField}/>\r\n            </div>\r\n            <div>\r\n                {hasError && <span> {meta.error} </span>}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => {\r\n    return (\r\n        <div className={styles.field}>\r\n            <Field placeholder={placeholder}\r\n                   name={name}\r\n                   validate={validators}\r\n                   component={component}\r\n                   {...props}\r\n            /> {text}\r\n        </div>\r\n    )\r\n};\r\n\r\n","export const required = value => (value || typeof value === 'number' ? undefined : 'Required');\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    return (\r\n        value && value.length > maxLength ? `Must be ${maxLength} characters or less` : undefined\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input, Textarea} from \"../../../../common/FormControls/FormControls\";\r\nimport s from './ProfileData.module.css'\r\nimport styles from \"../../../../common/FormControls/FormControls.module.css\";\r\nimport cn from 'classnames';\r\nimport {maxLengthCreator} from \"../../../../utilites/validators/validators\";\r\n\r\nconst ProfileDataForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={s.profile_info_container}>\r\n\r\n                <div className={s.property_container}>\r\n                    <div className={s.property_name}>FullName:</div>\r\n                    <div className={s.property_value}>{createField('Full name', 'fullName', [], Input)}</div>\r\n                </div>\r\n                <div className={s.property_container}>\r\n                    <div className={s.property_name}>About me:</div>\r\n                    <div className={s.property_value}>{createField('About me', 'aboutMe', [], Textarea)}</div>\r\n                </div>\r\n                <div className={s.property_container}>\r\n                    <div className={s.property_name}>Looking for a job:</div>\r\n                    <div className={cn(s.property_value,s.checkbox)}>{createField('Looking for a job',\r\n                            'lookingForAJob', [], Input, {type: 'checkbox'})}</div>\r\n                </div>\r\n                <div className={s.property_container}>\r\n                    <div className={s.property_name}>Professional skills:</div>\r\n                    <div className={s.property_value}>{createField('Professional skills', 'lookingForAJobDescription',\r\n                            [], Textarea)}</div>\r\n                </div >\r\n                <div className={s.property_container}>\r\n                    <div className={s.property_name}>Contacts:</div>\r\n                </div>\r\n                    {Object.keys(props.profile.contacts).map(key => {\r\n                        return <div className={s.property_container}>\r\n                            <div className={s.property_name}>{key}:</div>\r\n                            <div className={s.property_value}>{createField('', 'contacts.' + key, [], Input)} </div>\r\n                        </div>\r\n                    })}\r\n\r\n                {props.error && <div className={styles.error}>{props.error}</div>}\r\n                <button className={s.btn}>save</button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n};\r\n\r\nexport const ProfileDataFormRedux = reduxForm({\r\n    form: 'profileData'\r\n})(ProfileDataForm);\r\n\r\n","import React from 'react';\r\nimport s from './ProfileData.module.css';\r\nimport cn from 'classnames';\r\n\r\nconst ProfileData = ({ profile, isOwner, activateEditMode,showContacts, activateShowContacts }) => {\r\n    return (\r\n        <div className={s.profile_info_container}>\r\n            <div className={cn(s.property_container,s.shadow)}>\r\n                <div className={s.property_name}>About me:</div>\r\n                <div className={s.property_value}>{profile.aboutMe}</div>\r\n            </div>\r\n            <div className={cn(s.property_container,s.shadow)}>\r\n                <div className={s.property_name}>Looking for a job:</div>\r\n                <div className={s.property_value}>{profile.lookingForAJob ? 'yes' : 'not'}</div>\r\n            </div>\r\n            <div className={cn(s.property_container,s.shadow)}>\r\n                <div className={s.property_name}>Professional skills:</div>\r\n                <div className={s.property_value}>{profile.lookingForAJobDescription}</div>\r\n            </div>\r\n            <div className={cn(s.property_container,s.shadow)}>\r\n                <div className={s.toggle__show} onClick={activateShowContacts}>\r\n                    {showContacts?'hide contacts':'show contacts'}\r\n                </div>\r\n            </div>\r\n\r\n            {showContacts&&(Object.keys(profile.contacts).map(key => {\r\n             return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            }))}\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (<div className={cn(s.property_container,s.shadow)}>\r\n            <div className={s.property_name}>{contactTitle}</div>\r\n            <div className={s.property_value}>{contactValue}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileData;\r\n\r\n","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport s_p from '../ProfileInfo/ProfileData/ProfileData.module.css';\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport photo from '../../../assets/images/man.svg'\r\nimport ProfileStatusWithHooks from \"../ProfileStatus/ProfileStatusWithHooks\";\r\nimport {ProfileDataFormRedux} from \"./ProfileData/ProfileDataForm\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport editIcon from '../../../assets/images/gear.svg'\r\nimport ProfileData from \"./ProfileData/ProfileData\";\r\n\r\n\r\nconst ProfileInfo = ({ profile, isOwner, status, updateStatus, savePhoto,\r\n                         saveProfileData, currentUser, startChatting }) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const [showContacts, setShowContacts] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    };\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfileData(formData).then(\r\n            () => {\r\n                setEditMode(false)\r\n            })\r\n    };\r\n\r\n    return (<div className={s.user__profile}>\r\n            <div className={s.user__profile__title}>\r\n                <div className={s.user__profile__name}>{profile.fullName}</div>\r\n                <div className={s.user__profile__settings__btn}>\r\n                    {isOwner && <img src={editIcon} onClick={() => {setEditMode(!editMode)}} alt='editIcon'/>}\r\n                </div>\r\n\r\n            </div>\r\n            <ProfileStatusWithHooks status={status}\r\n                                    isOwner={isOwner}\r\n                                    updateStatus={updateStatus}/>\r\n            <div className={s.user__profile__container}>\r\n                <div className={s.user__profile__photo__block}>\r\n                    <div className={s.user__profile__photo}>\r\n                        <img src={profile.photos.large != null ? profile.photos.large : photo} alt='userPhoto'/>\r\n                    </div>\r\n\r\n                    {editMode &&\r\n                    <div>\r\n                        <input type='file' name=\"file\" id=\"file\"\r\n                               onChange={onMainPhotoSelected}\r\n                               className={s.input__file}/>\r\n                        <label for=\"file\">Choose main photo...</label>\r\n                    </div>\r\n\r\n                    }\r\n\r\n                    {!isOwner &&\r\n                    <NavLink to={`/dialogs/${currentUser}/messages`}>\r\n                        <button onClick={() => startChatting(currentUser)} className={s_p.btn}>send message</button>\r\n                    </NavLink>\r\n                    }\r\n                </div>\r\n                <div className={s.user__profile__information}>\r\n                    {editMode ?\r\n                        <ProfileDataFormRedux initialValues={profile}\r\n                                              onSubmit={onSubmit}\r\n                                              profile={profile}/>:\r\n                        <ProfileData profile={profile}\r\n                                     isOwner={isOwner}\r\n                                     showContacts={showContacts}\r\n                                     activateEditMode={() => {\r\n                                         setEditMode(true)\r\n                                     }}\r\n                                     activateShowContacts={() => {\r\n                                         setShowContacts(!showContacts)\r\n                                     }}/>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo;\r\n\r\n","import React from 'react';\r\nimport style from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={style.item}>\r\n            <img\r\n                src='https://картинки-для-срисовки.рф/image/cache/catalog/vse-kartinki/kosmonavt/kosmonavt-011-800x800.jpg'></img>\r\n            <div>{props.postText}</div>\r\n            <span className={style.likes}>like {props.likeCounter}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport {maxLengthCreator, required} from \"../../../../utilites/validators/validators\";\r\nimport {Textarea} from \"../../../../common/FormControls/FormControls\";\r\n\r\n\r\nconst maxLength5 = maxLengthCreator (5)\r\n\r\nconst PostForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    name='postText'\r\n                    component={Textarea}\r\n                    validate={[required, maxLength5]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button >send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst PostReduxForm = reduxForm ({\r\n    form: 'post'\r\n})(PostForm);\r\n\r\nexport default PostReduxForm;\r\n\r\n","import React from 'react';\r\nimport style from './MyPosts.module.css';\r\nimport Post from '../MyPosts/Post/Post';\r\nimport PostReduxForm from \"./Post/PostForm\";\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsOnWall = props.posts.map((post) => {\r\n        return (\r\n            <Post postText={post.postText} likeCounter={post.likeCounter}/>\r\n        )\r\n    });\r\n\r\n    const addPost = (values) => {\r\n        debugger;\r\n        props.addPost(values.postText);\r\n\r\n    };\r\n\r\n    return (\r\n        <div className={style.content}>\r\n            <h3>\r\n                My posts\r\n            </h3>\r\n            <div>\r\n                <PostReduxForm onSubmit={addPost}/>\r\n            </div>\r\n\r\n            {postsOnWall}\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateUserStatus}\r\n                         isOwner={props.isOwner}\r\n                         currentUser={props.currentUser}\r\n                         savePhoto={props.savePhoto}\r\n                         saveProfileData={props.saveProfileData}\r\n                         startChatting={props.startChatting}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;\r\n\r\n//{ props.isOwner ? <MyPostsContainer/> : ''}","import React from 'react';\r\nimport {addPost, changeText} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps=(state)=>{\r\n    return {\r\n        posts:state.profilePage.posts,\r\n        newTextInPost:state.profilePage.newTextInPost\r\n    }\r\n};\r\n\r\nconst MyPostsContainer=connect(mapStateToProps,{addPost})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    addPost,\r\n    getUserProfile,\r\n    getUserStatus,\r\n    savePhoto,\r\n    saveProfileData, setUserProfile,\r\n    updateUserStatus,\r\n} from '../../redux/profileReducer';\r\nimport { withRouter} from 'react-router-dom';\r\nimport {withAuthRedirect} from '../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\nimport {startChatting} from '../../redux/dialogsReducer';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile () {\r\n        let userId=this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId=this.props.authorizedUserId}\r\n        if(!userId) {\r\n            this.props.history.push('/login')\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getUserStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.setUserProfile(null)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile ()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <Profile {...this.props}\r\n                 profile={this.props.profile}\r\n                 status={this.props.status}\r\n                 isOwner={!this.props.match.params.userId}\r\n                 currentUser={this.props.match.params.userId}\r\n                 savePhoto={this.props.savePhoto}\r\n                 saveProfileData={this.props.saveProfileData}\r\n                 setUserProfile={this.props.setUserProfile}\r\n        />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return (\r\n        {   profile: state.profilePage.profile,\r\n            status: state.profilePage.status,\r\n            authorizedUserId: state.auth.id,\r\n            isAuth: state.auth.isAuth\r\n        }\r\n    )\r\n};\r\n\r\nexport default compose(\r\n    connect (mapStateToProps, {addPost,getUserProfile,\r\n        getUserStatus,updateUserStatus,savePhoto,saveProfileData,startChatting,setUserProfile }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)","import React, {useEffect, useState} from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport defaultPhoto from '../../assets/images/man.svg'\r\nimport cn from 'classnames'\r\n\r\nconst Header = (props) => {\r\n\r\n    const [active, setActive] = useState(false);\r\n\r\n    const [avatar,setAvatar] = useState(props.avatar);\r\n\r\n    useEffect(()=>{\r\n        setAvatar(props.avatar)\r\n    },[props.avatar]);\r\n\r\n    return <header className={s.header}>\r\n        <div className={s.container}>\r\n            <div className={s.header__body}>\r\n                <nav  onTouchEnd={() => setActive(!active)}\r\n                    className={active ? cn(s.header__menu,s.active) : s.header__menu}>\r\n                    <ul className={s.header__list}>\r\n                        <NavLink to='/profile' className={s.header__link}>\r\n                            <li>\r\n                            Profile\r\n                            </li>\r\n                        </NavLink>\r\n                        <NavLink to='/users' className={s.header__link}>\r\n                            <li>\r\n                            Users\r\n                            </li>\r\n                        </NavLink>\r\n                        <NavLink to='/dialogs' className={s.header__link}>\r\n                            <li>\r\n                                Dialogs {props.newMessagesCount>0?props.newMessagesCount:'' }\r\n                            </li>\r\n                        </NavLink>\r\n                    </ul>\r\n                </nav>\r\n                <div onClick={() => setActive(!active)}\r\n                     className={active ? `${s.header__burger} ${s.active}` : s.header__burger}>\r\n                    <span></span>\r\n                </div>\r\n                <div className={s.header__auth}>\r\n                    {props.profile ?\r\n                        <div className={s.header__auth__info}>\r\n                            <div className={s.header__auth__content}>\r\n                                <NavLink to='/profile'>\r\n                                    <div className={s.header__auth__name}>{props.profile.fullName}</div>\r\n                                </NavLink>\r\n                                <div className={s.header__auth__logout}>\r\n                                    <span onClick={props.logout}>logout</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className={s.header__auth__ava}>\r\n                                <NavLink to='/profile'>\r\n                                    <img src={props.profile.photos.small != null ?\r\n                                        props.profile.photos.small : defaultPhoto} alt='userMainPhoto'/>\r\n                                </NavLink>\r\n                            </div>\r\n                        </div>\r\n\r\n                        : <div className={s.header__auth__login}>\r\n                            <NavLink className={s.header__login} to={'/login'}>LOGIN</NavLink>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </header>\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout, refreshProfileData,} from \"../../redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.currentProfileData !== this.props.currentProfileData) {\r\n            this.props.refreshProfileData(this.props.id)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    id: state.auth.id,\r\n    login: state.auth.login,\r\n    avatar: state.auth.photo,\r\n    newMessagesCount: state.dialogsPage.newMessagesCount,\r\n    profile: state.auth.authProfile,\r\n    currentProfileData: state.profilePage.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout, refreshProfileData})(HeaderContainer);\r\n\r\n","import React from 'react';\r\nimport {reduxForm} from \"redux-form\";\r\nimport {required} from \"../../utilites/validators/validators\";\r\nimport {createField, Input} from \"../../common/FormControls/FormControls\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from '../../common/FormControls/FormControls.module.css'\r\nimport s from './Login.module.css'\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    };\r\n\r\n    if (props.isAuth) {\r\n\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.form__wrapper}>\r\n            <div className={s.form}>\r\n                <h3 className={s.form__title}>LOGIN</h3>\r\n                <LoginReduxForm onSubmit={onSubmit} captcha={props.captcha}/>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n\r\n            <div className={s.form__group}>\r\n                <div className={s.form__field}>\r\n                    {createField('Email', 'email', [required], Input)}\r\n                </div>\r\n                <label className={s.form__label}></label>\r\n            </div>\r\n\r\n            <div className={s.form__group}>\r\n                <div className={s.form__field}>\r\n                    {createField('Password', 'password', [required], Input, {type: 'password'})}\r\n                </div>\r\n                <label className={s.form__label}></label>\r\n            </div>\r\n\r\n            {props.captcha && <img src={props.captcha} alt='captcha'/>}\r\n            {props.captcha && <div>\r\n                {createField('captcha', 'captcha', [required], Input)}\r\n            </div>}\r\n\r\n            {props.error && <div className={styles.error}>\r\n                {props.error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button className={s.form__button}>Log in</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        captcha: state.auth.captcha\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import React from 'react';\r\nimport s from './Messages.module.css';\r\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\r\nimport cn from 'classnames';\r\n\r\nconst Message = ({userName,messageText,addedAt,userId,authId}) => {\r\n\r\n    let owner = !!(userId==authId)\r\n    return (\r\n        <div className={s.message__container} >\r\n            <div className={s.message__user__name}>\r\n                <span className={cn({[s.owner]:owner})}>{owner?'You':userName}:</span>\r\n            </div>\r\n            <div className={cn(s.message__wrapper,{[s.owner]:owner},{[s.owner_color]:owner})}>\r\n                <div className={s.message__text}>{messageText}</div>\r\n            </div>\r\n            <div className={cn(s.message__add__time,{[s.owner]:owner})}>\r\n                {formatDistanceToNow(addedAt,{addSuffix:true})}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport s from './Messages/Messages.module.css'\r\nimport {maxLengthCreator, required} from \"../../utilites/validators/validators\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\n\r\nconst maxLength300 = maxLengthCreator(300)\r\n\r\nconst MessageForm = (props)=> {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.message__form}>\r\n\r\n            <div className={s.message__send__button}>\r\n                <button type='submit' >send</button>\r\n            </div>\r\n            <div className={s.message__field}>\r\n                <Field\r\n                    name='message'\r\n                    component={Textarea}\r\n                    autocompele='off'\r\n\r\n                />\r\n            </div>\r\n\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MessageReduxForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'message'\r\n})(MessageForm)\r\n\r\nexport default MessageReduxForm;","import React from 'react';\r\nimport Message from \"./Message\";\r\nimport MessageReduxForm from \"./../MessageForm\";\r\nimport s from './Messages.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport parseIso from 'date-fns/parseISO'\r\nimport photo from \"../../../assets/images/man.svg\";\r\nimport arrow from '../../../assets/images/arrow.svg';\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\n\r\nconst Messages = ({userData,messages,currentUser,sendMessage,isLoading,authId}) => {\r\n\r\n    let name = userData.length ?userData[0].userName:'';\r\n    let userAva = userData.length ?userData[0].photos.small:'';\r\n    let messagesAll = messages.map((m) => {\r\n        return (\r\n            <Message userName={m.senderName}\r\n                     userId={m.senderId}\r\n                     authId={authId}\r\n                     messageText={m.body}\r\n                     key={m.id}\r\n                     addedAt={parseIso(m.addedAt)}/>\r\n        )\r\n    });\r\n\r\n    const sendMessageForm = (values) => {\r\n\r\n        sendMessage(currentUser, values.message)\r\n    };\r\n\r\n    return <div className={s.messages__container}>\r\n        <div className={s.messages__header}>\r\n\r\n            <NavLink to={'/dialogs'} className={s.messages__header_button}>\r\n                <img src={arrow}></img>\r\n                <span>back </span>\r\n            </NavLink>\r\n\r\n            <div>\r\n                <div className={s.header__user_name}>{name}</div>\r\n            </div>\r\n            <div className={s.header__user_photo_box}>\r\n                <img src={userAva ? userAva : photo} alt='userAva' className={s.header__user_photo_image}/>\r\n            </div>\r\n        </div>\r\n        <div className={s.messages__box}>\r\n                {isLoading ?<Preloader/> :messagesAll}\r\n        </div>\r\n        <div className={s.message__form_container}>\r\n            <MessageReduxForm onSubmit={sendMessageForm}/>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Messages;\r\n\r\n","export const getMessages = (state) => {\r\n    return state.dialogsPage.messages\r\n};\r\nexport const getCurrentUserID = (state) => {\r\n    return state.dialogsPage.currentUser\r\n};\r\nexport const getCurrentUserData = (state) => {\r\n    return state.dialogsPage.dialogs.filter(d=>d.id==getCurrentUserID(state))\r\n};\r\nexport const getIsLoading = (state) => {\r\n    return state.dialogsPage.isLoading\r\n};\r\nexport const getAuthId = (state) => {\r\n    return state.auth.id\r\n};\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport Messages from \"./Messages\";\r\nimport {requestMessages, sendNewMessage, setMessages} from \"../../../redux/dialogsReducer\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport {\r\n    getAuthId,\r\n    getCurrentUserData,\r\n    getCurrentUserID,\r\n    getIsLoading,\r\n    getMessages\r\n} from \"../../../redux/dialogsSelectors\";\r\n\r\nclass MessagesContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        debugger\r\n        let currentUserId = this.props.match.params.userId;\r\n        this.props.requestMessages(currentUserId)\r\n    }\r\n    componentWillUnmount () {\r\n        this.props.setMessages('')\r\n    }\r\n\r\n    render() {\r\n\r\n        return  <Messages\r\n            messages={this.props.messages}\r\n            sendMessage={this.props.sendNewMessage}\r\n            currentUser={this.props.currentUserId}\r\n            userData={this.props.currentUserData}\r\n            isLoading={this.props.isLoading}\r\n            authId={this.props.authId}\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messages: getMessages(state),\r\n        currentUserId: getCurrentUserID(state),\r\n        currentUserData: getCurrentUserData(state),\r\n        isLoading: getIsLoading(state),\r\n        authId: getAuthId(state)\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {requestMessages,sendNewMessage,setMessages}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(MessagesContainer)","import React from 'react';\r\nimport './App.css';\r\nimport {Redirect, Route} from 'react-router-dom';\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {initializeApp} from \"./redux/appReducer\";\r\nimport Preloader from \"./common/Preloader/Preloader\";\r\nimport MessagesContainer from \"./components/Dialogs/Messages/MessagesContainer\";\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        } else {\r\n            return (\r\n                <div className='app'>\r\n                    <div className='app__header'>\r\n                        <HeaderContainer/>\r\n                    </div>\r\n                    <div className='app__content'>\r\n                        <div className='app__content__container'>\r\n                            <Route exact path='/'\r\n                                   render={() => <Redirect to={'/profile'}/>}/>\r\n                            <Route path='/profile/:userId?'\r\n                                   render={() => <ProfileContainer/>}/>\r\n                            <Route exact path='/dialogs'\r\n                                   render={() => <DialogsContainer />}/>\r\n                            <Route path='/dialogs/:userId/messages'\r\n                                   render={() => <MessagesContainer />}/>\r\n                            <Route path='/users'\r\n                                   render={() => <UsersContainer />}/>\r\n                            <Route path='/login'\r\n                                   render={() => <Login />}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n});\r\n\r\nexport default connect(mapStateToProps, {initializeApp})(App);\r\n","import React from 'react';\r\nimport store from \"./redux/reduxStore\";\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from \"./App\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <HashRouter >\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </HashRouter>, document.getElementById('root'));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FormControls_container__1kWDi\",\"formControls\":\"FormControls_formControls__2HFFk\",\"formControls__error_text\":\"FormControls_formControls__error_text__1uT77\",\"error\":\"FormControls_error__1nBJP\",\"inputField_container\":\"FormControls_inputField_container__19olS\",\"inputField\":\"FormControls_inputField__2pxa7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__wrapper\":\"Login_form__wrapper__2MPi8\",\"form\":\"Login_form__26gmI\",\"form__field\":\"Login_form__field__2aXkl\",\"form__button\":\"Login_form__button__3A7nR\",\"form__title\":\"Login_form__title__2jCYY\",\"form__group\":\"Login_form__group__1-pG-\",\"form__label\":\"Login_form__label__3zrrh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader_container\":\"Users_preloader_container__1rJAO\",\"list__container\":\"Users_list__container__2nmW-\",\"list\":\"Users_list__1fOSU\",\"listItem__container\":\"Users_listItem__container__UDoT8\",\"listItem\":\"Users_listItem__1dnrz\",\"content__container\":\"Users_content__container__JtbRs\",\"content\":\"Users_content__Csu7n\",\"status\":\"Users_status__3ITxy\",\"ava\":\"Users_ava__2fyFf\"};","module.exports = __webpack_public_path__ + \"static/media/man.5a9e9877.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem__container\":\"UserItem_listItem__container__2Gw2I\",\"listItem\":\"UserItem_listItem__obHvT\",\"content__container\":\"UserItem_content__container__iqeuS\",\"content\":\"UserItem_content__25XBM\",\"status\":\"UserItem_status__tIssd\",\"ava\":\"UserItem_ava__1TMkk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_info_container\":\"ProfileData_profile_info_container__RvqRL\",\"property_container\":\"ProfileData_property_container__2TBSu\",\"shadow\":\"ProfileData_shadow__1vAKX\",\"property_name\":\"ProfileData_property_name__ellnd\",\"property_value\":\"ProfileData_property_value__1OLQH\",\"checkbox\":\"ProfileData_checkbox__1z-R8\",\"toggle__show\":\"ProfileData_toggle__show__2vZ9o\",\"btn\":\"ProfileData_btn__1El0M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3Rar_\",\"likes\":\"Post_likes__8GrEf\"};"],"sourceRoot":""}