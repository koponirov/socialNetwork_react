{"version":3,"sources":["components/Dialogs/Messages/Messages.module.css","components/Header/Header.module.css","assets/images/466.svg","common/Preloader/Preloader.module.css","assets/images/edit.svg","assets/images/gear.svg","components/Profile/MyPosts/MyPosts.module.css","assets/images/arrow.svg","components/Profile/ProfileInfo/ProfileInfo.module.css","api/api.js","redux/profileReducer.ts","redux/dialogsReducer.ts","redux/usersReducer.ts","redux/authReducer.ts","redux/appReducer.ts","redux/reduxStore.ts","components/hoc/withAuthRedirect.jsx","components/Users/UserItem.jsx","components/Dialogs/DialogsList.jsx","common/Preloader/Preloader.jsx","components/Dialogs/DialogsContainer.jsx","redux/usersSelectors.ts","components/Users/UsersList.jsx","components/Users/UsersContainer.tsx","components/Profile/ProfileStatus/ProfileStatusWithHooks.jsx","common/FormControls/FormControls.jsx","utilites/validators/validators.js","components/Profile/ProfileInfo/ProfileData/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileData/ProfileData.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/Post/PostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/Profile.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/Dialogs/Messages/Message.jsx","components/Dialogs/MessageForm.jsx","components/Dialogs/Messages/Messages.jsx","redux/dialogsSelectors.js","components/Dialogs/Messages/MessagesContainer.jsx","App.js","index.js","common/FormControls/FormControls.module.css","components/Login/Login.module.css","components/Users/Users.module.css","assets/images/man.svg","components/Users/UserItem.module.css","components/Profile/ProfileInfo/ProfileData/ProfileData.module.css","components/Profile/MyPosts/Post/Post.module.css"],"names":["module","exports","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageUsersAmount","get","authAPI","then","response","data","email","password","rememberMe","captcha","post","delete","profileAPI","id","userId","status","put","file","formData","FormData","append","securityAPI","dialogsAPI","message","body","ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_STATUS","SAVE_PHOTO_SUCCES","initialState","posts","postText","likeCounter","profile","addPost","newPost","type","setUserProfile","setStatus","savePhotoSuccess","photos","profileReducer","state","action","filter","SET_DIALOGS","SET_MESSAGES","SET_NEWMESSAGES_COUNT","SET_CURRENT_USER","SEND_MESSAGE","CREATE_DIALOG","TOGGLE_IS_LOADING","dialogs","messages","newMessagesCount","currentUser","isLoading","setMessages","setCurrentUser","setIsLoading","dialogsReducer","number","length","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS","users","pageSize","totalUsersCount","followingInProgress","setUsers","setCurrentPage","pageNumber","setTotalUsersCount","totalUsers","usersReducer","map","user","followed","inProgress","SET_USER_DATA","SET_AUTH_PROFILE","SET_CAPTCHA","login","isAuth","authProfile","setAuthUserData","payload","setCaptcha","setAuthProfile","getAuthUserData","dispatch","a","resultCode","getCaptcha","url","authReducer","SET_INITIALIZED","initialized","appReducer","rootReducer","combineReducers","profilePage","dialogsPage","usersPage","auth","app","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","mapStateToPropsForRedirect","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","UserItem","userName","userStatus","userPhoto","path","style","className","s","listItem__container","listItem","ava","src","defaultPhoto","alt","content__container","content","DialogsList","Row","index","small","lastSeen","lastUserActivityDate","list","height","width","itemCount","itemSize","window_list","Preloader","container","loading","DialogsContainer","requestDialogs","requestNewMessagesCount","list__container","newMessageText","messagesCount","getUsers","getPageSize","getTotalUsersCount","getCurrentPage","getIsLoading","getFollowingInProgress","UsersList","hasNextPage","isNextPageLoading","loadNextPage","items","loadMoreItems","isItemLoaded","name","styles","minimumBatchSize","threshold","onItemsRendered","ref","UsersContainer","startIndex","stopIndex","itemsNumber","Math","ceil","requestUsers","totalCount","onPageChanged","currentPageNumber","ProfileStatusWithHooks","useState","editMode","setEditMode","useEffect","user__profile__status__container","user__profile__status","saved_status","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","input_status","isOwner","onClick","user__profile__status__edit","editIcon","Textarea","input","meta","hasError","touched","error","cn","formControls","inputField_container","inputField","Input","createField","placeholder","validators","component","text","field","Field","validate","required","undefined","maxLengthCreator","maxLength","ProfileDataFormRedux","reduxForm","onSubmit","handleSubmit","profile_info_container","property_container","property_name","property_value","checkbox","Object","keys","contacts","key","btn","Contact","contactTitle","contactValue","shadow","ProfileData","showContacts","activateEditMode","activateShowContacts","aboutMe","lookingForAJob","lookingForAJobDescription","toggle__show","ProfileInfo","savePhoto","saveProfileData","startChatting","setShowContacts","user__profile","user__profile__title","user__profile__name","fullName","user__profile__settings__btn","user__profile__container","user__profile__photo__block","user__profile__photo","large","photo","target","files","input__file","for","s_p","user__profile__information","initialValues","Post","item","likes","maxLength5","PostReduxForm","MyPosts","postsOnWall","values","Profile","newTextInPost","updateUserStatus","ProfileContainer","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","snapshot","alert","console","log","getState","errorMessage","stopSubmit","_error","Promise","reject","withRouter","Header","active","setActive","avatar","setAvatar","header","header__body","onTouchEnd","header__menu","header__list","header__link","header__burger","header__auth","header__auth__info","header__auth__content","header__auth__name","header__auth__logout","logout","header__auth__ava","header__auth__login","header__login","HeaderContainer","currentProfileData","refreshProfileData","LoginReduxForm","form__group","form__field","form__label","form__button","form__wrapper","form__title","Message","messageText","addedAt","owner","authId","message__container","message__user__name","message__wrapper","owner_color","message__text","message__add__time","formatDistanceToNow","addSuffix","MessageReduxForm","message__form","message__send__button","message__field","autocompele","Messages","userData","sendMessage","userAva","messagesAll","m","senderName","senderId","parseIso","messages__container","messages__header","messages__header_button","arrow","header__user_name","header__user_photo_box","header__user_photo_image","messages__box","message__form_container","getMessages","getCurrentUserID","getCurrentUserData","d","getAuthId","MessagesContainer","currentUserId","requestMessages","sendNewMessage","currentUserData","reset","App","initializeApp","exact","render","promise","all","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ebe023d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages__container\":\"Messages_messages__container__33cyS\",\"messages__header\":\"Messages_messages__header__2KWaD\",\"messages__header_button\":\"Messages_messages__header_button__3ovh2\",\"header__user_name\":\"Messages_header__user_name__25K-9\",\"header__user_photo_box\":\"Messages_header__user_photo_box__Mkzp8\",\"header__user_photo_image\":\"Messages_header__user_photo_image__1HGIN\",\"messages__box\":\"Messages_messages__box__2fXkZ\",\"message__container\":\"Messages_message__container__3rEed\",\"message__wrapper\":\"Messages_message__wrapper__1_9Ea\",\"owner\":\"Messages_owner__2Om5O\",\"owner_color\":\"Messages_owner_color__2qeaF\",\"message__user__name\":\"Messages_message__user__name__1b-Ls\",\"message__text\":\"Messages_message__text__1k32F\",\"message__add__time\":\"Messages_message__add__time__10xO-\",\"message__form\":\"Messages_message__form__31KQ8\",\"message__field\":\"Messages_message__field__3dGL9\",\"message__send__button\":\"Messages_message__send__button__ODKRc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1etFM\",\"container\":\"Header_container__1Oqyp\",\"header__body\":\"Header_header__body__2UT7o\",\"header__menu\":\"Header_header__menu__1WMv5\",\"header__burger\":\"Header_header__burger__1BeK2\",\"header__list\":\"Header_header__list__2rlgu\",\"header__link\":\"Header_header__link__2w6uR\",\"active\":\"Header_active__3Ko8N\",\"header__auth\":\"Header_header__auth__hbZg5\",\"header__auth__info\":\"Header_header__auth__info__6m0qU\",\"header__auth__content\":\"Header_header__auth__content__2sdx8\",\"header__auth__name\":\"Header_header__auth__name__3lOMv\",\"header__auth__ava\":\"Header_header__auth__ava__2Idgu\",\"header__auth__logout\":\"Header_header__auth__logout__2jUkw\",\"header__auth__login\":\"Header_header__auth__login__ecDlA\"};","module.exports = __webpack_public_path__ + \"static/media/466.b5b1dbdf.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Preloader_container__3mNA2\"};","module.exports = __webpack_public_path__ + \"static/media/edit.33ae1541.svg\";","module.exports = __webpack_public_path__ + \"static/media/gear.a411a4d3.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__1ICs_\"};","module.exports = __webpack_public_path__ + \"static/media/arrow.6c9efe0c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user__profile\":\"ProfileInfo_user__profile__yozWI\",\"user__profile__title\":\"ProfileInfo_user__profile__title__396i9\",\"user__profile__name\":\"ProfileInfo_user__profile__name__2fDb3\",\"user__profile__settings__btn\":\"ProfileInfo_user__profile__settings__btn__3-b9V\",\"user__profile__status__container\":\"ProfileInfo_user__profile__status__container__3Sozg\",\"user__profile__status\":\"ProfileInfo_user__profile__status__2qvr1\",\"user__profile__status__edit\":\"ProfileInfo_user__profile__status__edit__3_odt\",\"input_status\":\"ProfileInfo_input_status__1m5Er\",\"saved_status\":\"ProfileInfo_saved_status__2w20_\",\"user__profile__container\":\"ProfileInfo_user__profile__container__1Fsf-\",\"user__profile__photo__block\":\"ProfileInfo_user__profile__photo__block__30-Oh\",\"user__profile__photo\":\"ProfileInfo_user__profile__photo__2qd9u\",\"input__file\":\"ProfileInfo_input__file__3P00C\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\"API-KEY\": \"47ad904e-927d-48cc-9957-38180f91f4d5\"},\r\n//ya:374b61b3-3684-46aa-832c-9d3f951a688f,klubn:9a26a650-26b0-4c4b-8aab-54c45ef378c9,gm:\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageUsersAmount) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageUsersAmount}`)\r\n    }\r\n};\r\nexport const authAPI = {\r\n\r\n    me() {\r\n        return instance.get('auth/me')\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post('auth/login', {email, password, rememberMe, captcha})\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n    }\r\n};\r\nexport const profileAPI = {\r\n\r\n    getUserProfile(id) {\r\n        return instance.get(`profile/${id}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getUserStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    updateUserStatus(status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n    },\r\n    savePhoto(file) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", file);\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    saveProfileData(formData) {\r\n        return instance.put(`profile`, formData)\r\n    }\r\n};\r\n\r\nexport const followAPI = {\r\n    followToUser(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    unfollowToUser(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    }\r\n};\r\nexport const securityAPI = {\r\n    getCapthaUrl() {\r\n        return instance.get('security/get-captcha-url')\r\n    }\r\n};\r\n\r\nexport const dialogsAPI = {\r\n    //get all dialogs\r\n    getDialogs() {\r\n        return instance.get('dialogs')\r\n    },\r\n    //start chatting\r\n    startChatting(userId) {\r\n        return instance.put(`dialogs/${userId}`)\r\n    },\r\n    //get list of messages with user\r\n    getDialogWithUser(userId) {\r\n        return instance.get(`dialogs/${userId}/messages`)\r\n    },\r\n    //send message to user\r\n    sendMessage(userId, message) {\r\n        return instance.post(`dialogs/${userId}/messages`, {body: message})\r\n    },\r\n    //count new messages\r\n    getNewMessagesCount() {\r\n        return instance.get('dialogs/messages/new/count')\r\n    }\r\n};\r\n\r\n","import {profileAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {PhotosType, ProfileType} from \"../types/types\";\r\n\r\nconst ADD_POST = 'socialNetwork/profile/ADD_POST';\r\nconst DELETE_POST = 'socialNetwork/profile/DELETE_POST';\r\nconst SET_USER_PROFILE = 'socialNetwork/profile/SET_USER_PROFILE';\r\nconst LOOKING_FOR_JOB = 'socialNetwork/profile/LOOKING_FOR_JOB';\r\nconst SET_STATUS = 'socialNetwork/profile/SET_STATUS';\r\nconst SAVE_PHOTO_SUCCES = 'socialNetwork/profile/SAVE_PHOTO_SUCCES';\r\n\r\ntype PostType = {\r\n    userId: number,\r\n    postText: string,\r\n    likeCounter: number\r\n}\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {userId: 1, postText: 'How r u?', likeCounter: 1},\r\n        {userId: 2, postText: 'Hi!', likeCounter: 0},\r\n        {userId: 3, postText: 'What?', likeCounter: 5},\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    //lookingForAJob: false,\r\n    status: '',\r\n};\r\n\r\nexport type initialStateType = typeof initialState;\r\n\r\nconst profileReducer = (state = initialState, action:any):initialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {userId: 6, postText: action.newPost, likeCounter: 0}]\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post.userId != action.id)\r\n            };\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        case SAVE_PHOTO_SUCCES:\r\n            return {\r\n                ...state,\r\n                //Need refactor type\r\n                profile: {...state.profile, photos: action.file} as ProfileType\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype AddPostType = {\r\n    type: typeof ADD_POST\r\n    newPost: string\r\n}\r\nexport const addPost = (newPost: string):AddPostType => ({type: ADD_POST, newPost});\r\ntype DeletePostType = {\r\n    type: typeof DELETE_POST\r\n    id: number\r\n}\r\nexport const deletePost = (id: number): DeletePostType => ({type: DELETE_POST, id});\r\ntype SetUserProfileType = {\r\n    type: typeof SET_USER_PROFILE\r\n    profile: ProfileType\r\n}\r\nexport const setUserProfile = (profile: ProfileType): SetUserProfileType => ({type: SET_USER_PROFILE, profile});\r\ntype SetStatusType = {\r\n    type: typeof SET_STATUS\r\n    status: string\r\n}\r\nexport const setStatus = (status: string): SetStatusType => ({type: SET_STATUS, status});\r\ntype SavePhotoSuccessType = {\r\n    type: typeof SAVE_PHOTO_SUCCES\r\n    photos: PhotosType\r\n}\r\nexport const savePhotoSuccess = (photos: PhotosType): SavePhotoSuccessType => ({type: SAVE_PHOTO_SUCCES, photos});\r\n\r\n\r\nexport const getUserProfile = (id: number) => async (dispatch: any) => {\r\n    const data = await profileAPI.getUserProfile(id);\r\n    dispatch(setUserProfile(data));\r\n};\r\n\r\nexport const getUserStatus = (userId: number) => async (dispatch: any) => {\r\n    const data = await profileAPI.getUserStatus(userId);\r\n    dispatch(setStatus(data));\r\n};\r\n\r\nexport const updateUserStatus = (status: string) => async (dispatch: any) => {\r\n    try {\r\n        const response = await profileAPI.updateUserStatus(status);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status))\r\n        }\r\n    }\r\n    catch (error) {\r\n        alert('error')\r\n        console.error(error)\r\n        console.log(error)\r\n    }\r\n};\r\n\r\nexport const savePhoto = (photos: PhotosType) => async (dispatch: any) => {\r\n    const response = await profileAPI.savePhoto(photos);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos))\r\n    }\r\n};\r\n\r\nexport const saveProfileData = (profile: ProfileType) => async (dispatch: any,getState: any) => {\r\n    let response = await profileAPI.saveProfileData(profile);\r\n    if (response.data.resultCode === 0) {\r\n\r\n        const userId=getState().auth.id;\r\n        const data = await profileAPI.getUserProfile(userId);\r\n        dispatch(setUserProfile(data));\r\n    }\r\n    else {\r\n        let errorMessage = response.data.messages.length > 0 ? response.data.messages[0] : 'Oops';\r\n        console.log(errorMessage)\r\n        dispatch(stopSubmit('profileData', {_error: errorMessage}));\r\n        return Promise.reject(errorMessage)\r\n    }\r\n};\r\n\r\nexport default profileReducer;","import {dialogsAPI} from \"../api/api\";\r\nimport {reset} from 'redux-form';\r\nimport { PhotosType } from \"../types/types\";\r\n\r\nconst SET_DIALOGS = 'socialNetwork/dialogs/SET_DIALOGS';\r\nconst SET_MESSAGES = 'socialNetwork/dialogs/SET_MESSAGES';\r\nconst SET_NEWMESSAGES_COUNT = 'socialNetwork/dialogs/SET_NEWMESSAGES_COUNT';\r\nconst SET_CURRENT_USER = 'socialNetwork/dialogs/SET_CURRENT_USER';\r\nconst SEND_MESSAGE = 'socialNetwork/dialogs/SEND_MESSAGE';\r\nconst CREATE_DIALOG = 'socialNetwork/dialogs/CREATE_DIALOG';\r\nconst TOGGLE_IS_LOADING = 'socialNetwork/dialogs/TOGGLE_IS_LOADING';\r\n\r\nexport type DialogType = {\r\n    id: number\r\n    userName: string\r\n    hasNewMessages: boolean\r\n    lastDialogActivityDate: string\r\n    lastUserActivityDate: string\r\n    newMessagesCount: number\r\n    photos: PhotosType\r\n}\r\n\r\nexport type MessagesItemsType = {\r\n    id: string\r\n    body: string\r\n    translatedBody: null|string\r\n    addedAt: string\r\n    senderId: number\r\n    senderName: string,\r\n    recipientId: number\r\n    viewed: boolean\r\n}\r\n\r\nexport type MessagesType = {\r\n    items:  MessagesItemsType\r\n    totalCount: number\r\n    error: null\r\n}\r\n\r\nlet initialState = {\r\n    dialogs: [] as Array<DialogType>,\r\n    messages: [] as Array<MessagesType>,\r\n    newMessagesCount:null,\r\n    currentUser: null,\r\n    isLoading:false\r\n};\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\nconst dialogsReducer = (state = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_DIALOGS :\r\n            return {\r\n                ...state,\r\n                dialogs: [...action.dialogs]\r\n            };\r\n        case SET_MESSAGES :\r\n            return {\r\n                ...state,\r\n                messages: [...action.messages]\r\n            };\r\n        case TOGGLE_IS_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            };\r\n        case SET_NEWMESSAGES_COUNT :\r\n            return {\r\n                ...state,\r\n                newMessagesCount: action.number\r\n            };\r\n        case SET_CURRENT_USER :\r\n            return {\r\n                ...state,\r\n                currentUser: action.userId\r\n            };\r\n        case SEND_MESSAGE :\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, ...action.message]\r\n            };\r\n        case CREATE_DIALOG :\r\n            if (state.dialogs.length) {\r\n                return {\r\n                    ...state,\r\n                    dialogs: [...state.dialogs, ...action.userId]\r\n                };\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    dialogs: [...action.userId]\r\n                };\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype setDialogsActionCreatorType = {\r\n    type: typeof SET_DIALOGS\r\n    dialogs: DialogType\r\n}\r\n\r\ntype setMessagesActionCreatorType = {\r\n    type: typeof SET_MESSAGES\r\n    messages: MessagesType\r\n}\r\n\r\ntype setNewMessagesCountActionCreatorType = {\r\n    type: typeof SET_NEWMESSAGES_COUNT\r\n    number: number\r\n}\r\n\r\ntype setCurrentUserActionCreatorType = {\r\n    type: typeof SET_CURRENT_USER\r\n    userId: number\r\n}\r\n\r\ntype sendMessageActionCreatorType = {\r\n    type: typeof SEND_MESSAGE\r\n    message: string\r\n}\r\ntype createDialogActionCreatorType = {\r\n    type: typeof CREATE_DIALOG\r\n    userId: number\r\n}\r\ntype setIsLoadingActionCreatorType = {\r\n    type: typeof TOGGLE_IS_LOADING\r\n    isLoading: boolean\r\n}\r\n\r\nexport const setDialogs = (dialogs: DialogType): setDialogsActionCreatorType => ({type: SET_DIALOGS, dialogs});\r\nexport const setMessages = (messages: MessagesType): setMessagesActionCreatorType=> ({type: SET_MESSAGES, messages});\r\nexport const setNewMessagesCount = (number: number): setNewMessagesCountActionCreatorType => ({type: SET_NEWMESSAGES_COUNT, number});\r\nexport const setCurrentUser = (userId:number): setCurrentUserActionCreatorType => ({type: SET_CURRENT_USER, userId});\r\nexport const sendMessage = (message: string): sendMessageActionCreatorType => ({type: SEND_MESSAGE, message});\r\nexport const createDialog = (userId: number): createDialogActionCreatorType => ({type: CREATE_DIALOG, userId});\r\nexport const setIsLoading = (isLoading: boolean): setIsLoadingActionCreatorType => ({type: TOGGLE_IS_LOADING, isLoading});\r\n\r\nexport const requestDialogs = () => async (dispatch: any) => {\r\n    let response = await dialogsAPI.getDialogs();\r\n    dispatch(setDialogs(response.data));\r\n};\r\n\r\nexport const startChatting = (userId: number) => async (dispatch: any) => {\r\n\r\n    let response = await dialogsAPI.startChatting(userId)\r\n};\r\n\r\nexport const requestMessages = (userId: number) => async (dispatch: any) => {\r\n\r\n    dispatch(setIsLoading(true));\r\n    dispatch(setCurrentUser(userId));\r\n    let response = await dialogsAPI.getDialogWithUser(userId);\r\n    let messages = response.data.items;\r\n    dispatch(setMessages(messages));\r\n    dispatch(setIsLoading(false))\r\n};\r\n\r\nexport const sendNewMessage = (userId: number, message: string) => async (dispatch: any) => {\r\n\r\n    const response = await dialogsAPI.sendMessage(userId, message);\r\n    if (response.data.resultCode === 0) {\r\n        let response = await dialogsAPI.getDialogWithUser(userId);\r\n        let messages = response.data.items;\r\n        dispatch(setMessages(messages));\r\n        dispatch(reset('message'))\r\n    }\r\n};\r\n\r\nexport const requestNewMessagesCount = () => async (dispatch: any) => {\r\n\r\n    const response = await dialogsAPI.getNewMessagesCount();\r\n    let messagesCount = response.data;\r\n    dispatch(setNewMessagesCount(messagesCount));\r\n};\r\n\r\nexport default dialogsReducer;\r\n","import {followAPI, usersAPI} from \"../api/api\";\r\nimport {UsersType} from \"../types/types\";\r\n\r\nconst FOLLOW = 'socialNetwork/users/FOLLOW';\r\nconst UNFOLLOW = 'socialNetwork/users/UNFOLLOW';\r\nconst SET_USERS = 'socialNetwork/users/SET_USERS';\r\nconst SET_MORE_USERS = 'socialNetwork/users/SET_MORE_USERS';\r\nconst SET_CURRENT_PAGE = 'socialNetwork/users/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS = 'socialNetwork/users/SET_TOTAL_USERS';\r\nconst TOGGLE_IS_LOADING = 'socialNetwork/users/TOGGLE_IS_LOADING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'socialNetwork/users/TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\n\r\nlet initialState = {\r\n    users: [] as Array<UsersType>,\r\n    pageSize: 100,\r\n    totalUsersCount: 20,\r\n    currentPage: 1,\r\n    followingInProgress: [] as Array<number>,// Array of user ids\r\n    isLoading: false,\r\n};\r\n\r\nexport type initialStateType = typeof initialState;\r\n\r\nconst usersReducer = (state = initialState, action: any): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: true}\r\n                    }\r\n                    return user;\r\n                })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: false}\r\n                    }\r\n                    return user;\r\n                })\r\n            };\r\n        case SET_USERS:\r\n            if (state.users.length>0) {\r\n                return {\r\n                    ...state,\r\n                    users: [...state.users, ...action.users]\r\n                };\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    users: [...action.users]\r\n                };\r\n            }\r\n\r\n        // case SET_MORE_USERS:\r\n        //     return {\r\n        //         ...state,\r\n        //         users: [...state.users,...action.users]\r\n        //     };\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.pageNumber\r\n            };\r\n        case SET_TOTAL_USERS:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsers\r\n            };\r\n        case TOGGLE_IS_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            };\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.inProgress\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\ntype FollowUserType = {\r\n    type: typeof FOLLOW\r\n    userId: number\r\n}\r\nexport const followUser = (userId: number): FollowUserType => ({type: FOLLOW, userId});\r\ntype UnfollowUserType = {\r\n    type: typeof UNFOLLOW\r\n    userId: number\r\n}\r\nexport const unfollowUser = (userId: number): UnfollowUserType => ({type: UNFOLLOW, userId});\r\ntype SetUsersType = {\r\n    type: typeof SET_USERS\r\n    users: Array<UsersType>\r\n}\r\nexport const setUsers = (users: Array<UsersType>): SetUsersType => ({type: SET_USERS, users});\r\ntype SetMoreUsersType = {\r\n    type: typeof SET_MORE_USERS\r\n    users: Array<UsersType>\r\n}\r\nexport const setMoreUsers = (users: Array<UsersType>): SetMoreUsersType => ({type: SET_MORE_USERS, users});\r\ntype SetCurrentPageType = {\r\n    type: typeof SET_CURRENT_PAGE\r\n    pageNumber: number\r\n}\r\nexport const setCurrentPage = (pageNumber: number): SetCurrentPageType => ({type: SET_CURRENT_PAGE, pageNumber});\r\ntype SetTotalUsersCountType = {\r\n    type: typeof SET_TOTAL_USERS\r\n    totalUsers: number\r\n}\r\nexport const setTotalUsersCount = (totalUsers: number): SetTotalUsersCountType => ({type: SET_TOTAL_USERS, totalUsers});\r\ntype SetIsLoadingType = {\r\n    type: typeof TOGGLE_IS_LOADING\r\n    isLoading: boolean\r\n}\r\nexport const setIsLoading = (isLoading: boolean): SetIsLoadingType => ({type: TOGGLE_IS_LOADING, isLoading});\r\ntype SetInProgressType = {\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS\r\n    inProgress: boolean\r\n    userId: number\r\n}\r\nexport const setInProgress = (inProgress: boolean, userId: number): SetInProgressType  => {\r\n    return {type: TOGGLE_IS_FOLLOWING_PROGRESS, inProgress, userId}\r\n};\r\n\r\nexport const requestUsers = (currentPage: number, pageSize: number) => {\r\n\r\n    return async (dispatch: any) => {\r\n        dispatch(setIsLoading(true));\r\n        let response = await usersAPI.getUsers(currentPage, pageSize);\r\n        dispatch(setIsLoading(false));\r\n        dispatch(setUsers(response.data.items));\r\n        dispatch(setTotalUsersCount(response.data.totalCount))\r\n    }\r\n};\r\n\r\nexport const requestMoreUsers = (currentPage: number, pageSize: number) => {\r\n\r\n    return async (dispatch: any) => {\r\n        dispatch(setIsLoading(true));\r\n        let response = await usersAPI.getUsers(currentPage , pageSize);\r\n        dispatch(setIsLoading(false));\r\n        dispatch(setMoreUsers(response.data.items));\r\n        dispatch(setTotalUsersCount(response.data.totalCount))\r\n    }\r\n};\r\n\r\nexport const onPageChanged = (currentPageNumber: number, pageSize: number) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(setIsLoading(true));\r\n        dispatch(setCurrentPage(currentPageNumber));\r\n        let response = await usersAPI.getUsers(currentPageNumber, pageSize)\r\n        dispatch(setIsLoading(false));\r\n        dispatch(setUsers(response.data.items));\r\n    }\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch: any, userId: number, apiMethod: any, actionCreator: any) => {\r\n    dispatch(setInProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(setInProgress(false, userId));\r\n};\r\n\r\nexport const follow = (userId: number) => {\r\n    return async (dispatch: any) => {\r\n        followUnfollowFlow(\r\n            dispatch,\r\n            userId,\r\n            followAPI.followToUser.bind(followAPI),\r\n            unfollowUser)\r\n    }\r\n};\r\n\r\nexport const unfollow = (userId: number) => {\r\n    return async (dispatch: any) => {\r\n        followUnfollowFlow(\r\n            dispatch,\r\n            userId,\r\n            followAPI.unfollowToUser.bind(followAPI),\r\n            followUser)\r\n    }\r\n};\r\n\r\nexport default usersReducer;","import {authAPI, profileAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst SET_USER_DATA = 'socialNetwork/auth/SET_USER_DATA';\r\nconst SET_AUTH_PROFILE = 'socialNetwork/auth/SET_AUTH_PROFILE';\r\nconst SET_CAPTCHA = 'socialNetwork/auth/SET_CAPTCHA';\r\n\r\n// export type initialStateType = {\r\n//     id: number | null\r\n//     email: string | null\r\n//     login: string | null\r\n//     isAuth: boolean\r\n//     captcha: string | null,\r\n//     authProfile: object | null,\r\n// };\r\n\r\nlet initialState = {\r\n    id: null as null|number,\r\n    email: null as null|string,\r\n    login: null as null|string,\r\n    isAuth: false,\r\n    captcha: null as null|string,\r\n    authProfile:null\r\n};\r\n\r\nexport type initialStateType = typeof initialState;\r\n\r\nconst authReducer = (state = initialState, action: any) : initialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case SET_CAPTCHA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case SET_AUTH_PROFILE:\r\n            return {\r\n                ...state,\r\n                authProfile: action.payload,\r\n                isAuth: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype setAuthUserDataActionPayloadCreatorType = {\r\n    email: string | null\r\n    id: number | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\ntype setAuthUserDataActionCreatorType = {\r\n    type: typeof SET_USER_DATA,\r\n    payload: setAuthUserDataActionPayloadCreatorType\r\n}\r\n\r\nexport const setAuthUserData = (email: string | null, id: number | null, login: string | null, isAuth: boolean) : setAuthUserDataActionCreatorType => ({\r\n    type: SET_USER_DATA,\r\n    payload: {email, id, login, isAuth}\r\n});\r\n\r\ntype setCaptchaType = {\r\n    type: typeof SET_CAPTCHA,\r\n    payload: {captcha: string}\r\n}\r\n\r\nexport const setCaptcha = (captcha: string) : setCaptchaType => ({\r\n    type: SET_CAPTCHA,\r\n    payload: {captcha}\r\n});\r\n\r\ntype setAuthProfileActionPayloadType = {\r\n    aboutMe: string,\r\n    contacts: {\r\n        facebook: string | null\r\n        website: string | null\r\n        vk: string | null\r\n        twitter: string | null\r\n        instagram: string | null\r\n        youtube: string | null\r\n        github: string | null\r\n        mainLink: string | null\r\n    },\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string | null,\r\n    fullName: string | null,\r\n    userId: number,\r\n    photos: {\r\n        small: string | null\r\n        large: string | null\r\n    }\r\n}\r\n\r\ntype setAuthProfileActionType = {\r\n    type: typeof SET_AUTH_PROFILE\r\n    payload: setAuthProfileActionPayloadType\r\n}\r\n\r\nexport const setAuthProfile = (data: setAuthProfileActionPayloadType) : setAuthProfileActionType => ({type: SET_AUTH_PROFILE, payload: data});\r\n\r\nexport const getAuthUserData = () => async (dispatch: any) => {\r\n    let response = await authAPI.me();\r\n\r\n    if (response.resultCode === 0) {\r\n        let {email, id, login} = response.data;\r\n        dispatch(setAuthUserData(email, id, login, true));\r\n        profileAPI.getUserProfile(id)\r\n            .then((data: any )=> {\r\n                dispatch(setAuthProfile(data))\r\n            })\r\n    }\r\n};\r\n\r\nexport const refreshProfileData = (id: number) => (dispatch: any) => {\r\n    profileAPI.getUserProfile(id)\r\n        .then((data: setAuthProfileActionPayloadType ) => {\r\n            dispatch(setAuthProfile(data))\r\n        })\r\n};\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string) => async (dispatch: any) => {\r\n    let response = await authAPI.login(email, password, rememberMe,captcha);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptcha())\r\n        }\r\n\r\n        let errorMessage = response.data.messages.length > 0 ? response.data.messages[0] : 'Oops'\r\n        dispatch(stopSubmit('login', {_error: errorMessage}))\r\n    }\r\n};\r\n\r\nexport const getCaptcha = () => async (dispatch: any) => {\r\n    debugger;\r\n    let response = await securityAPI.getCapthaUrl();\r\n    const captcha = (response.data.url)\r\n    dispatch(setCaptcha(captcha))\r\n};\r\n\r\n\r\nexport const logout = () => async (dispatch: any) => {\r\n    let response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n};\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./authReducer\";\r\n\r\nconst SET_INITIALIZED = 'socialNetwork/app/SET_INITIALIZED';\r\n\r\nexport type initialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nlet initialState : initialStateType = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action:any) : initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype initializedSuccesActionType = {\r\n    type: typeof SET_INITIALIZED\r\n}\r\n\r\nexport const initialized = () : initializedSuccesActionType => ({type: SET_INITIALIZED});\r\n\r\nexport const initializeApp = () => (dispatch:any) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initialized())\r\n    })\r\n};\r\n\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet rootReducer = combineReducers(\r\n    {\r\n        profilePage: profileReducer,\r\n        dialogsPage: dialogsReducer,\r\n        usersPage: usersReducer,\r\n        auth: authReducer,\r\n        app: appReducer,\r\n        form: formReducer\r\n    }\r\n);\r\n\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n// @ts-ignore\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    auth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.auth) {\r\n                return <Redirect to={'/login'}/>\r\n            }\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent\r\n\r\n};","import React from 'react';\r\nimport s from \"./UserItem.module.css\";\r\nimport defaultPhoto from \"../../assets/images/man.svg\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst UserItem = ({ userName, userStatus, userPhoto, path, style }) => {\r\n\r\n    return (\r\n        <NavLink to={path}>\r\n            <div className={s.listItem__container} style={style}>\r\n                <div className={s.listItem}>\r\n                    <div className={s.ava}>\r\n                        <img src={ userPhoto ? userPhoto : defaultPhoto} alt='userPhoto'/>\r\n                    </div>\r\n                    <div className={s.content__container}>\r\n                        <div className={s.content}>\r\n                            {userName}\r\n                        </div>\r\n                        <div className={s.status}>\r\n                            {userStatus}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </NavLink>\r\n    )\r\n};\r\n\r\nexport default UserItem;","import React from 'react';\r\nimport {FixedSizeList as List} from \"react-window\";\r\nimport s from \"../Users/Users.module.css\";\r\nimport AutoSizer from \"react-virtualized-auto-sizer\";\r\nimport UserItem from \"../Users/UserItem\";\r\n\r\nconst DialogsList = ({ dialogs }) => {\r\n\r\n    const Row = ({ index, style }) => {\r\n        \r\n        let user = dialogs[index];\r\n\r\n        let path = `/dialogs/${user.id}/messages`;\r\n\r\n        return (<UserItem path={path}\r\n                          style={style}\r\n                          userPhoto={user.photos.small}\r\n                          userName={user.userName}\r\n                          lastSeen={user.lastUserActivityDate}\r\n            />\r\n        )\r\n    };\r\n\r\n    return (<div className={s.list}>\r\n                <AutoSizer>\r\n                    {({ height, width }) => (\r\n\r\n                        <List\r\n                            height={height}\r\n                            itemCount={dialogs.length}\r\n                            itemSize={100}\r\n                            width={width}\r\n                            className={s.window_list}\r\n                        >\r\n                            {Row}\r\n                        </List>\r\n                    )}\r\n                </AutoSizer>\r\n        </div>\r\n\r\n\r\n    )\r\n};\r\n\r\nexport default DialogsList;\r\n\r\n","import React from 'react'\r\nimport loading from '../../assets/images/466.svg';\r\nimport s from './Preloader.module.css'\r\n\r\nconst Preloader=()=>{\r\n    return (\r\n        <div className={s.container}>\r\n            <img src={loading} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {requestDialogs, requestNewMessagesCount} from \"../../redux/dialogsReducer\";\r\nimport DialogsList from \"./DialogsList\";\r\nimport s from \"../Users/Users.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\n\r\n\r\nclass DialogsContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.requestDialogs();\r\n        this.props.requestNewMessagesCount()\r\n    }\r\n\r\n    render() {\r\n        return (<div className={s.list__container}>\r\n                {this.props.dialogs.length > 0 ? <DialogsList\r\n                    dialogs={this.props.dialogs}\r\n                /> : <Preloader/>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        newMessageText: state.dialogsPage.newMessageText\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {requestDialogs,requestNewMessagesCount})\r\n)(DialogsContainer)","import {AppStateType} from \"./reduxStore\";\r\n\r\nexport const getUsers = (state: AppStateType) => {\r\n    return state.usersPage.users\r\n};\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize\r\n};\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n};\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage\r\n};\r\nexport const getIsLoading = (state: AppStateType) => {\r\n    return state.usersPage.isLoading\r\n};\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress\r\n};\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport styles from \"./Users.module.css\";\r\nimport AutoSizer from \"react-virtualized-auto-sizer\";\r\nimport InfiniteLoader from \"react-window-infinite-loader\";\r\nimport {FixedSizeList as List} from \"react-window\"\r\nimport UserItem from \"./UserItem\";\r\n\r\nconst UsersList = ({users, hasNextPage,isNextPageLoading,loadNextPage,totalUsers}) => {\r\n\r\n    let items = users;\r\n\r\n    const itemCount = totalUsers;\r\n\r\n    const loadMoreItems = isNextPageLoading ? () => {} : loadNextPage;\r\n\r\n    const isItemLoaded = index => !hasNextPage || index < items.length;\r\n\r\n    const Row = ({index, style}) => {\r\n\r\n        let userPhoto,userName,userStatus,user,userId;\r\n\r\n        if (!isItemLoaded(index)) {\r\n\r\n            userId = '';\r\n            userPhoto = false;\r\n            userName = 'Loading...';\r\n            userStatus= 'Loading...';\r\n        } else {\r\n            user = items[index];\r\n            userId = user.id;\r\n            userPhoto = user.photos.small;\r\n            userName = user.name;\r\n            userStatus= user.status\r\n        }\r\n\r\n        let path = '/profile/' + userId;\r\n\r\n        return (\r\n            <UserItem path={path}\r\n                      style={style}\r\n                      userName={userName}\r\n                      userPhoto={userPhoto}\r\n                      userStatus={userStatus}/>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={styles.list}>\r\n            <AutoSizer >\r\n                {({ height, width }) => (\r\n                    <InfiniteLoader\r\n                        isItemLoaded={isItemLoaded}\r\n                        loadMoreItems={loadMoreItems}\r\n                        itemCount={itemCount}\r\n                        minimumBatchSize={50}\r\n                        threshold={25}\r\n                    >\r\n                        {({ onItemsRendered, ref }) => (\r\n                            <List\r\n                                height={height}\r\n                                itemCount={itemCount}\r\n                                itemSize={100}\r\n                                width={width}\r\n                                ref={ref}\r\n                                onItemsRendered={onItemsRendered}\r\n                                className={styles.window_list}\r\n                            >\r\n                                {Row}\r\n                            </List>\r\n                        )}\r\n                    </InfiniteLoader>\r\n                )}\r\n            </AutoSizer>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default UsersList;\r\n\r\n","import {connect} from 'react-redux'\r\nimport React from 'react'\r\nimport {\r\n    setInProgress, onPageChanged, follow, unfollow, requestUsers, setCurrentPage, setUsers\r\n} from '../../redux/usersReducer';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage, getFollowingInProgress,\r\n    getIsLoading, getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/usersSelectors\";\r\nimport UsersList from \"./UsersList\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport s from './Users.module.css'\r\nimport {UsersType} from \"../../types/types\";\r\nimport { AppStateType } from '../../redux/reduxStore';\r\n\r\ntype MapStatePropsType = {\r\n    currentPage: number\r\n    pageSize: number\r\n    users: Array<UsersType>\r\n    isLoading: boolean\r\n    followingInProgress: Array<number>\r\n    totalUsersCount: number\r\n}\r\n\r\ntype MapDispathPropsType = {\r\n\r\n    requestUsers: (currentPage: number , pageSize: number) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    setUsers: (users: Array<UsersType>) => void\r\n    onPageChanged: (currentPageNumber: number, pageSize: number) => void\r\n}\r\n\r\ntype OwnPropsType = {\r\n    title?: string\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispathPropsType & OwnPropsType;\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //this.props.setCurrentPage(1);\r\n        //this.props.setUsers([]);\r\n    }\r\n\r\n    loadNextPage = (startIndex: number,stopIndex: number) => {\r\n\r\n        let itemsNumber = (stopIndex - startIndex)+1;\r\n        let pageNumber = Math.ceil((startIndex+1)/itemsNumber);\r\n        this.props.requestUsers(pageNumber,itemsNumber)\r\n    };\r\n\r\n    render() {\r\n        return (<div className={s.list__container}>\r\n\r\n                {this.props.users.length>0 ?\r\n                    <UsersList\r\n                        users={this.props.users}\r\n                        hasNextPage={true}\r\n                        isNextPageLoading={this.props.isLoading}\r\n                        loadNextPage={this.loadNextPage}\r\n                        totalUsers={this.props.totalUsersCount}\r\n                    /> : <Preloader/>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isLoading: getIsLoading(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect<MapStatePropsType, MapDispathPropsType, OwnPropsType, AppStateType>(mapStateToProps, {\r\n        requestUsers,\r\n        setCurrentPage,\r\n        setUsers,\r\n        onPageChanged\r\n    }),\r\n    withAuthRedirect\r\n)(UsersContainer)\r\n","import React, {useState, useEffect} from 'react'\r\nimport s from \"../ProfileInfo/ProfileInfo.module.css\";\r\nimport editIcon from '../../../assets/images/edit.svg'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    const [editMode,setEditMode] = useState(false);\r\n    const [status,setStatus] = useState(props.status);\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    },[props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        if (props.isOwner) {\r\n            setEditMode(true)}\r\n\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n\r\n        return (\r\n            <div className={s.user__profile__status__container}>\r\n\r\n                {!editMode &&\r\n                    <div className={s.user__profile__status}>\r\n                        <span className={s.saved_status}>{props.status|| \"...status\"}</span>\r\n                    </div>}\r\n                {editMode &&\r\n                    <div className={s.user__profile__status}>\r\n                        <input onChange={onStatusChange} autoFocus={true}\r\n                               onBlur={deactivateEditMode} value={status} className={s.input_status}>\r\n\r\n                        </input>\r\n                    </div>}\r\n                {props.isOwner && <div onClick={activateEditMode} className={s.user__profile__status__edit}>\r\n                    <img src={editIcon} alt='editIcon'/>\r\n                </div>}\r\n            </div>\r\n        )\r\n    };\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport cn from 'classnames'\r\nimport styles from './FormControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n\r\n    const hasError = (meta.touched && meta.error);\r\n\r\n    return (\r\n        <div className={cn(styles.container,{[styles.formControls]:hasError})}>\r\n            <div className={styles.inputField_container}>\r\n                <textarea {...input} {...props} className={styles.inputField}/>\r\n            </div>\r\n            <div >\r\n                {hasError && <span> {meta.error} </span>}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n\r\n    const hasError = (meta.touched && meta.error);\r\n\r\n    return (\r\n        <div className={cn({[styles.formControls]:hasError})}>\r\n            <div >\r\n                <input {...input} {...props} className={styles.inputField}/>\r\n            </div>\r\n            <div>\r\n                {hasError && <span> {meta.error} </span>}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => {\r\n    return (\r\n        <div className={styles.field}>\r\n            <Field placeholder={placeholder}\r\n                   name={name}\r\n                   validate={validators}\r\n                   component={component}\r\n                   {...props}\r\n            /> {text}\r\n        </div>\r\n    )\r\n};\r\n\r\n","export const required = value => (value || typeof value === 'number' ? undefined : 'Required');\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    return (\r\n        value && value.length > maxLength ? `Must be ${maxLength} characters or less` : undefined\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input, Textarea} from \"../../../../common/FormControls/FormControls\";\r\nimport s from './ProfileData.module.css'\r\nimport styles from \"../../../../common/FormControls/FormControls.module.css\";\r\nimport cn from 'classnames';\r\nimport {maxLengthCreator} from \"../../../../utilites/validators/validators\";\r\n\r\nconst ProfileDataForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={s.profile_info_container}>\r\n\r\n                <div className={s.property_container}>\r\n                    <div className={s.property_name}>FullName:</div>\r\n                    <div className={s.property_value}>{createField('Full name', 'fullName', [], Input)}</div>\r\n                </div>\r\n                <div className={s.property_container}>\r\n                    <div className={s.property_name}>About me:</div>\r\n                    <div className={s.property_value}>{createField('About me', 'aboutMe', [], Textarea)}</div>\r\n                </div>\r\n                <div className={s.property_container}>\r\n                    <div className={s.property_name}>Looking for a job:</div>\r\n                    <div className={cn(s.property_value,s.checkbox)}>{createField('Looking for a job',\r\n                            'lookingForAJob', [], Input, {type: 'checkbox'})}</div>\r\n                </div>\r\n                <div className={s.property_container}>\r\n                    <div className={s.property_name}>Professional skills:</div>\r\n                    <div className={s.property_value}>{createField('Professional skills', 'lookingForAJobDescription',\r\n                            [], Textarea)}</div>\r\n                </div >\r\n                <div className={s.property_container}>\r\n                    <div className={s.property_name}>Contacts:</div>\r\n                </div>\r\n                    {Object.keys(props.profile.contacts).map(key => {\r\n                        return <div className={s.property_container}>\r\n                            <div className={s.property_name}>{key}:</div>\r\n                            <div className={s.property_value}>{createField('', 'contacts.' + key, [], Input)} </div>\r\n                        </div>\r\n                    })}\r\n\r\n                {props.error && <div className={styles.error}>{props.error}</div>}\r\n                <button className={s.btn}>save</button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n};\r\n\r\nexport const ProfileDataFormRedux = reduxForm({\r\n    form: 'profileData'\r\n})(ProfileDataForm);\r\n\r\n","import React from 'react';\r\nimport s from './ProfileData.module.css';\r\nimport cn from 'classnames';\r\n\r\nconst ProfileData = ({ profile, isOwner, activateEditMode,showContacts, activateShowContacts }) => {\r\n    return (\r\n        <div className={s.profile_info_container}>\r\n            <div className={cn(s.property_container,s.shadow)}>\r\n                <div className={s.property_name}>About me:</div>\r\n                <div className={s.property_value}>{profile.aboutMe}</div>\r\n            </div>\r\n            <div className={cn(s.property_container,s.shadow)}>\r\n                <div className={s.property_name}>Looking for a job:</div>\r\n                <div className={s.property_value}>{profile.lookingForAJob ? 'yes' : 'not'}</div>\r\n            </div>\r\n            <div className={cn(s.property_container,s.shadow)}>\r\n                <div className={s.property_name}>Professional skills:</div>\r\n                <div className={s.property_value}>{profile.lookingForAJobDescription}</div>\r\n            </div>\r\n            <div className={cn(s.property_container,s.shadow)}>\r\n                <div className={s.toggle__show} onClick={activateShowContacts}>\r\n                    {showContacts?'hide contacts':'show contacts'}\r\n                </div>\r\n            </div>\r\n\r\n            {showContacts&&(Object.keys(profile.contacts).map(key => {\r\n             return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            }))}\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (<div className={cn(s.property_container,s.shadow)}>\r\n            <div className={s.property_name}>{contactTitle}</div>\r\n            <div className={s.property_value}>{contactValue}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileData;\r\n\r\n","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport s_p from '../ProfileInfo/ProfileData/ProfileData.module.css';\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport photo from '../../../assets/images/man.svg'\r\nimport ProfileStatusWithHooks from \"../ProfileStatus/ProfileStatusWithHooks\";\r\nimport {ProfileDataFormRedux} from \"./ProfileData/ProfileDataForm\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport editIcon from '../../../assets/images/gear.svg'\r\nimport ProfileData from \"./ProfileData/ProfileData\";\r\n\r\n\r\nconst ProfileInfo = ({ profile, isOwner, status, updateStatus, savePhoto,\r\n                         saveProfileData, currentUser, startChatting }) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const [showContacts, setShowContacts] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    };\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfileData(formData).then(\r\n            () => {\r\n                setEditMode(false)\r\n            })\r\n    };\r\n\r\n    return (<div className={s.user__profile}>\r\n            <div className={s.user__profile__title}>\r\n                <div className={s.user__profile__name}>{profile.fullName}</div>\r\n                <div className={s.user__profile__settings__btn}>\r\n                    {isOwner && <img src={editIcon} onClick={() => {setEditMode(!editMode)}} alt='editIcon'/>}\r\n                </div>\r\n\r\n            </div>\r\n            <ProfileStatusWithHooks status={status}\r\n                                    isOwner={isOwner}\r\n                                    updateStatus={updateStatus}/>\r\n            <div className={s.user__profile__container}>\r\n                <div className={s.user__profile__photo__block}>\r\n                    <div className={s.user__profile__photo}>\r\n                        <img src={profile.photos.large != null ? profile.photos.large : photo} alt='userPhoto'/>\r\n                    </div>\r\n\r\n                    {editMode &&\r\n                    <div>\r\n                        <input type='file' name=\"file\" id=\"file\"\r\n                               onChange={onMainPhotoSelected}\r\n                               className={s.input__file}/>\r\n                        <label for=\"file\">Choose main photo...</label>\r\n                    </div>\r\n\r\n                    }\r\n\r\n                    {!isOwner &&\r\n                    <NavLink to={`/dialogs/${currentUser}/messages`}>\r\n                        <button onClick={() => startChatting(currentUser)} className={s_p.btn}>send message</button>\r\n                    </NavLink>\r\n                    }\r\n                </div>\r\n                <div className={s.user__profile__information}>\r\n                    {editMode ?\r\n                        <ProfileDataFormRedux initialValues={profile}\r\n                                              onSubmit={onSubmit}\r\n                                              profile={profile}/>:\r\n                        <ProfileData profile={profile}\r\n                                     isOwner={isOwner}\r\n                                     showContacts={showContacts}\r\n                                     activateEditMode={() => {\r\n                                         setEditMode(true)\r\n                                     }}\r\n                                     activateShowContacts={() => {\r\n                                         setShowContacts(!showContacts)\r\n                                     }}/>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo;\r\n\r\n","import React from 'react';\r\nimport style from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={style.item}>\r\n            <img\r\n                src='https://картинки-для-срисовки.рф/image/cache/catalog/vse-kartinki/kosmonavt/kosmonavt-011-800x800.jpg'></img>\r\n            <div>{props.postText}</div>\r\n            <span className={style.likes}>like {props.likeCounter}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport {maxLengthCreator, required} from \"../../../../utilites/validators/validators\";\r\nimport {Textarea} from \"../../../../common/FormControls/FormControls\";\r\n\r\n\r\nconst maxLength5 = maxLengthCreator (5)\r\n\r\nconst PostForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    name='postText'\r\n                    component={Textarea}\r\n                    validate={[required, maxLength5]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button >send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst PostReduxForm = reduxForm ({\r\n    form: 'post'\r\n})(PostForm);\r\n\r\nexport default PostReduxForm;\r\n\r\n","import React from 'react';\r\nimport style from './MyPosts.module.css';\r\nimport Post from '../MyPosts/Post/Post';\r\nimport PostReduxForm from \"./Post/PostForm\";\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsOnWall = props.posts.map((post) => {\r\n        return (\r\n            <Post postText={post.postText} likeCounter={post.likeCounter}/>\r\n        )\r\n    });\r\n\r\n    const addPost = (values) => {\r\n        debugger;\r\n        props.addPost(values.postText);\r\n\r\n    };\r\n\r\n    return (\r\n        <div className={style.content}>\r\n            <h3>\r\n                My posts\r\n            </h3>\r\n            <div>\r\n                <PostReduxForm onSubmit={addPost}/>\r\n            </div>\r\n\r\n            {postsOnWall}\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateUserStatus}\r\n                         isOwner={props.isOwner}\r\n                         currentUser={props.currentUser}\r\n                         savePhoto={props.savePhoto}\r\n                         saveProfileData={props.saveProfileData}\r\n                         startChatting={props.startChatting}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;\r\n\r\n//{ props.isOwner ? <MyPostsContainer/> : ''}\r\n","import React from 'react';\r\nimport {addPost, changeText} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps=(state)=>{\r\n    return {\r\n        posts:state.profilePage.posts,\r\n        newTextInPost:state.profilePage.newTextInPost\r\n    }\r\n};\r\n\r\nconst MyPostsContainer=connect(mapStateToProps,{addPost})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    addPost,\r\n    getUserProfile,\r\n    getUserStatus,\r\n    savePhoto,\r\n    saveProfileData, setUserProfile,\r\n    updateUserStatus,\r\n} from '../../redux/profileReducer';\r\nimport { withRouter} from 'react-router-dom';\r\nimport {withAuthRedirect} from '../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\nimport {startChatting} from '../../redux/dialogsReducer';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile () {\r\n        let userId=this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId=this.props.authorizedUserId}\r\n        if(!userId) {\r\n            this.props.history.push('/login')\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getUserStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.setUserProfile(null)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile ()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <Profile {...this.props}\r\n                 profile={this.props.profile}\r\n                 status={this.props.status}\r\n                 isOwner={!this.props.match.params.userId}\r\n                 currentUser={this.props.match.params.userId}\r\n                 savePhoto={this.props.savePhoto}\r\n                 saveProfileData={this.props.saveProfileData}\r\n                 setUserProfile={this.props.setUserProfile}\r\n        />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return (\r\n        {   profile: state.profilePage.profile,\r\n            status: state.profilePage.status,\r\n            authorizedUserId: state.auth.id,\r\n            isAuth: state.auth.isAuth\r\n        }\r\n    )\r\n};\r\n\r\nexport default compose(\r\n    connect (mapStateToProps, {addPost,getUserProfile,\r\n        getUserStatus,updateUserStatus,savePhoto,saveProfileData,startChatting,setUserProfile }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)","import React, {useEffect, useState} from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport defaultPhoto from '../../assets/images/man.svg'\r\nimport cn from 'classnames'\r\n\r\nconst Header = (props) => {\r\n\r\n    const [active, setActive] = useState(false);\r\n\r\n    const [avatar,setAvatar] = useState(props.avatar);\r\n\r\n    useEffect(()=>{\r\n        setAvatar(props.avatar)\r\n    },[props.avatar]);\r\n\r\n    return <header className={s.header}>\r\n        <div className={s.container}>\r\n            <div className={s.header__body}>\r\n                <nav  onTouchEnd={() => setActive(!active)}\r\n                    className={active ? cn(s.header__menu,s.active) : s.header__menu}>\r\n                    <ul className={s.header__list}>\r\n                        <NavLink to='/profile' className={s.header__link}>\r\n                            <li>\r\n                            Profile\r\n                            </li>\r\n                        </NavLink>\r\n                        <NavLink to='/users' className={s.header__link}>\r\n                            <li>\r\n                            Users\r\n                            </li>\r\n                        </NavLink>\r\n                        <NavLink to='/dialogs' className={s.header__link}>\r\n                            <li>\r\n                                Dialogs {props.newMessagesCount>0?props.newMessagesCount:'' }\r\n                            </li>\r\n                        </NavLink>\r\n                    </ul>\r\n                </nav>\r\n                <div onClick={() => setActive(!active)}\r\n                     className={active ? `${s.header__burger} ${s.active}` : s.header__burger}>\r\n                    <span></span>\r\n                </div>\r\n                <div className={s.header__auth}>\r\n                    {props.profile ?\r\n                        <div className={s.header__auth__info}>\r\n                            <div className={s.header__auth__content}>\r\n                                <NavLink to='/profile'>\r\n                                    <div className={s.header__auth__name}>{props.profile.fullName}</div>\r\n                                </NavLink>\r\n                                <div className={s.header__auth__logout}>\r\n                                    <span onClick={props.logout}>logout</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className={s.header__auth__ava}>\r\n                                <NavLink to='/profile'>\r\n                                    <img src={props.profile.photos.small != null ?\r\n                                        props.profile.photos.small : defaultPhoto} alt='userMainPhoto'/>\r\n                                </NavLink>\r\n                            </div>\r\n                        </div>\r\n\r\n                        : <div className={s.header__auth__login}>\r\n                            <NavLink className={s.header__login} to={'/login'}>LOGIN</NavLink>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </header>\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout, refreshProfileData,} from \"../../redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.currentProfileData !== this.props.currentProfileData) {\r\n            this.props.refreshProfileData(this.props.id)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    id: state.auth.id,\r\n    login: state.auth.login,\r\n    avatar: state.auth.photo,\r\n    newMessagesCount: state.dialogsPage.newMessagesCount,\r\n    profile: state.auth.authProfile,\r\n    currentProfileData: state.profilePage.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout, refreshProfileData})(HeaderContainer);\r\n\r\n","import React from 'react';\r\nimport {reduxForm} from \"redux-form\";\r\nimport {required} from \"../../utilites/validators/validators\";\r\nimport {createField, Input} from \"../../common/FormControls/FormControls\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from '../../common/FormControls/FormControls.module.css'\r\nimport s from './Login.module.css'\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    };\r\n\r\n    if (props.isAuth) {\r\n\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.form__wrapper}>\r\n            <div className={s.form}>\r\n                <h3 className={s.form__title}>LOGIN</h3>\r\n                <LoginReduxForm onSubmit={onSubmit} captcha={props.captcha}/>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n\r\n            <div className={s.form__group}>\r\n                <div className={s.form__field}>\r\n                    {createField('Email', 'email', [required], Input)}\r\n                </div>\r\n                <label className={s.form__label}></label>\r\n            </div>\r\n\r\n            <div className={s.form__group}>\r\n                <div className={s.form__field}>\r\n                    {createField('Password', 'password', [required], Input, {type: 'password'})}\r\n                </div>\r\n                <label className={s.form__label}></label>\r\n            </div>\r\n\r\n            {props.captcha && <img src={props.captcha} alt='captcha'/>}\r\n            {props.captcha && <div>\r\n                {createField('captcha', 'captcha', [required], Input)}\r\n            </div>}\r\n\r\n            {props.error && <div className={styles.error}>\r\n                {props.error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button className={s.form__button}>Log in</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        captcha: state.auth.captcha\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import React from 'react';\r\nimport s from './Messages.module.css';\r\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\r\nimport cn from 'classnames';\r\n\r\nconst Message = ({userName,messageText,addedAt,userId,authId}) => {\r\n\r\n    let owner = !!(userId==authId)\r\n    return (\r\n        <div className={s.message__container} >\r\n            <div className={s.message__user__name}>\r\n                <span className={cn({[s.owner]:owner})}>{owner?'You':userName}:</span>\r\n            </div>\r\n            <div className={cn(s.message__wrapper,{[s.owner]:owner},{[s.owner_color]:owner})}>\r\n                <div className={s.message__text}>{messageText}</div>\r\n            </div>\r\n            <div className={cn(s.message__add__time,{[s.owner]:owner})}>\r\n                {formatDistanceToNow(addedAt,{addSuffix:true})}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport s from './Messages/Messages.module.css'\r\nimport {maxLengthCreator, required} from \"../../utilites/validators/validators\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\n\r\nconst maxLength300 = maxLengthCreator(300)\r\n\r\nconst MessageForm = (props)=> {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.message__form}>\r\n\r\n            <div className={s.message__send__button}>\r\n                <button type='submit' >send</button>\r\n            </div>\r\n            <div className={s.message__field}>\r\n                <Field\r\n                    name='message'\r\n                    component={Textarea}\r\n                    autocompele='off'\r\n\r\n                />\r\n            </div>\r\n\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MessageReduxForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'message'\r\n})(MessageForm)\r\n\r\nexport default MessageReduxForm;","import React from 'react';\r\nimport Message from \"./Message\";\r\nimport MessageReduxForm from \"./../MessageForm\";\r\nimport s from './Messages.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport parseIso from 'date-fns/parseISO'\r\nimport photo from \"../../../assets/images/man.svg\";\r\nimport arrow from '../../../assets/images/arrow.svg';\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\n\r\nconst Messages = ({ userData,messages,currentUser,sendMessage,isLoading,authId }) => {\r\n\r\n    let name = userData.length ? userData[0].userName : '';\r\n    let userAva = userData.length ? userData[0].photos.small : '';\r\n    let messagesAll = messages.map((m) => {\r\n        return (\r\n            <Message userName = {m.senderName}\r\n                     userId = {m.senderId}\r\n                     authId = {authId}\r\n                     messageText = {m.body}\r\n                     key = {m.id}\r\n                     addedAt = {parseIso(m.addedAt)}/>\r\n        )\r\n    });\r\n\r\n    const sendMessageForm = (values) => {\r\n\r\n        sendMessage(currentUser, values.message)\r\n    };\r\n\r\n    return <div className={s.messages__container}>\r\n        <div className={s.messages__header}>\r\n\r\n            <NavLink to={'/dialogs'} className={s.messages__header_button}>\r\n                <img src={arrow}></img>\r\n                <span>back </span>\r\n            </NavLink>\r\n\r\n            <div>\r\n                <NavLink to={`/profile/${currentUser}`} className={s.header__user_name}>{name}</NavLink>\r\n            </div>\r\n            <div className={s.header__user_photo_box}>\r\n                <img src={userAva ? userAva : photo} alt='userAva' className={s.header__user_photo_image}/>\r\n            </div>\r\n        </div>\r\n        <div className={s.messages__box}>\r\n                {isLoading ?<Preloader/> :messagesAll}\r\n        </div>\r\n        <div className={s.message__form_container}>\r\n            <MessageReduxForm onSubmit={sendMessageForm}/>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Messages;\r\n\r\n","export const getMessages = (state) => {\r\n    return state.dialogsPage.messages\r\n};\r\nexport const getCurrentUserID = (state) => {\r\n    return state.dialogsPage.currentUser\r\n};\r\nexport const getCurrentUserData = (state) => {\r\n    return state.dialogsPage.dialogs.filter(d=>d.id==getCurrentUserID(state))\r\n};\r\nexport const getIsLoading = (state) => {\r\n    return state.dialogsPage.isLoading\r\n};\r\nexport const getAuthId = (state) => {\r\n    return state.auth.id\r\n};\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport Messages from \"./Messages\";\r\nimport {requestMessages, sendNewMessage, setMessages} from \"../../../redux/dialogsReducer\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport {\r\n    getAuthId,\r\n    getCurrentUserData,\r\n    getCurrentUserID,\r\n    getIsLoading,\r\n    getMessages\r\n} from \"../../../redux/dialogsSelectors\";\r\n\r\nclass MessagesContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        let currentUserId = this.props.match.params.userId;\r\n        this.props.requestMessages(currentUserId)\r\n    }\r\n    componentWillUnmount () {\r\n        this.props.setMessages('')\r\n    }\r\n\r\n    render() {\r\n\r\n        return  <Messages\r\n            messages={this.props.messages}\r\n            sendMessage={this.props.sendNewMessage}\r\n            currentUser={this.props.currentUserId}\r\n            userData={this.props.currentUserData}\r\n            isLoading={this.props.isLoading}\r\n            authId={this.props.authId}\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messages: getMessages(state),\r\n        currentUserId: getCurrentUserID(state),\r\n        currentUserData: getCurrentUserData(state),\r\n        isLoading: getIsLoading(state),\r\n        authId: getAuthId(state)\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {requestMessages,sendNewMessage,setMessages}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(MessagesContainer)\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {Redirect, Route} from 'react-router-dom';\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {initializeApp} from \"./redux/appReducer\";\r\nimport Preloader from \"./common/Preloader/Preloader\";\r\nimport MessagesContainer from \"./components/Dialogs/Messages/MessagesContainer\";\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        } else {\r\n            return (\r\n                <div className='app'>\r\n                    <div className='app__header'>\r\n                        <HeaderContainer/>\r\n                    </div>\r\n                    <div className='app__content'>\r\n                        <div className='app__content__container'>\r\n                            <Route exact path='/'\r\n                                   render={() => <Redirect to={'/profile'}/>}/>\r\n                            <Route path='/profile/:userId?'\r\n                                   render={() => <ProfileContainer/>}/>\r\n                            <Route exact path='/dialogs'\r\n                                   render={() => <DialogsContainer />}/>\r\n                            <Route path='/dialogs/:userId/messages'\r\n                                   render={() => <MessagesContainer />}/>\r\n                            <Route path='/users'\r\n                                   render={() => <UsersContainer />}/>\r\n                            <Route path='/login'\r\n                                   render={() => <Login />}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n});\r\n\r\nexport default connect(mapStateToProps, {initializeApp})(App);\r\n","import React from 'react';\r\nimport store from \"./redux/reduxStore\";\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from \"./App\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <HashRouter >\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </HashRouter>, document.getElementById('root'));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FormControls_container__1kWDi\",\"formControls\":\"FormControls_formControls__2HFFk\",\"formControls__error_text\":\"FormControls_formControls__error_text__1uT77\",\"error\":\"FormControls_error__1nBJP\",\"inputField_container\":\"FormControls_inputField_container__19olS\",\"inputField\":\"FormControls_inputField__2pxa7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__wrapper\":\"Login_form__wrapper__2MPi8\",\"form\":\"Login_form__26gmI\",\"form__field\":\"Login_form__field__2aXkl\",\"form__button\":\"Login_form__button__3A7nR\",\"form__title\":\"Login_form__title__2jCYY\",\"form__group\":\"Login_form__group__1-pG-\",\"form__label\":\"Login_form__label__3zrrh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader_container\":\"Users_preloader_container__1rJAO\",\"list__container\":\"Users_list__container__2nmW-\",\"list\":\"Users_list__1fOSU\",\"listItem__container\":\"Users_listItem__container__UDoT8\",\"listItem\":\"Users_listItem__1dnrz\",\"content__container\":\"Users_content__container__JtbRs\",\"content\":\"Users_content__Csu7n\",\"status\":\"Users_status__3ITxy\",\"ava\":\"Users_ava__2fyFf\"};","module.exports = __webpack_public_path__ + \"static/media/man.5a9e9877.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem__container\":\"UserItem_listItem__container__2Gw2I\",\"listItem\":\"UserItem_listItem__obHvT\",\"content__container\":\"UserItem_content__container__iqeuS\",\"content\":\"UserItem_content__25XBM\",\"status\":\"UserItem_status__tIssd\",\"ava\":\"UserItem_ava__1TMkk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_info_container\":\"ProfileData_profile_info_container__RvqRL\",\"property_container\":\"ProfileData_property_container__2TBSu\",\"shadow\":\"ProfileData_shadow__1vAKX\",\"property_name\":\"ProfileData_property_name__ellnd\",\"property_value\":\"ProfileData_property_value__1OLQH\",\"checkbox\":\"ProfileData_checkbox__1z-R8\",\"toggle__show\":\"ProfileData_toggle__show__2vZ9o\",\"btn\":\"ProfileData_btn__1El0M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3Rar_\",\"likes\":\"Post_likes__8GrEf\"};"],"sourceRoot":""}